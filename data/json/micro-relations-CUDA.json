{"cursor":"34237","size":15,"audio":[],"currentlang":"en","article":"{{Infobox software\n| name = CUDA screenshot = caption = A parallel computing platform and\n| programming model developer = NVIDIA Corporation latest_release_version = 5.0\n| latest_release_date = operating_system = Windows XP and later, Mac OS X,\n| Linux platform = Supported GPUs genre = GPGPU license = Freeware website =\n}} 'CUDA' (formerly 'Compute Unified Device Architecture') is a parallel\ncomputing platform and programming model created by NVIDIA and implemented by\nthe graphics processing units (GPUs) that they\nproduce. [http://www.nvidia.com/object/cuda_home_new.html NVIDIA CUDA Home\nPage] CUDA gives developers access to the virtual instruction set and\nmemory of the parallel computational elements in CUDA GPUs. Using CUDA, the\nlatest Nvidia GPUs become accessible for computation like CPUs. Unlike CPUs,\nhowever, GPUs have a parallel throughput architecture that emphasizes executing\nmany concurrent threads slowly, rather than executing a single thread very\nquickly. This approach of solving general-purpose (i.e., not exclusively\ngraphics) problems on GPUs is known as GPGPU.\n\nThe CUDA platform is accessible to software developers through [http://developer.nvidia.com/cuda/gpu-accelerated-\nlibraries CUDA-accelerated libraries], compiler directives (such as\n[http://www.openacc.org OpenACC]), and extensions to industry-standard\nprogramming languages, including C, C++ and Fortran. C/C++ programmers use 'CUDA\nC/C++', compiled with \"nvcc\", NVIDIA's LLVM-based C/C++ compiler, [http://developer.nvidia.com/cuda/cuda-llvm-\ncompiler CUDA LLVM Compiler] and Fortran programmers can use 'CUDA\nFortran', compiled with the [http://www.pgroup.com/resources/cudafortran.htm PGI\nCUDA Fortran] compiler from The Portland Group.\n\nIn addition to libraries, compiler directives, CUDA C/C++ and CUDA Fortran, the\nCUDA platform supports other computational interfaces, including the Khronos\nGroup's OpenCL, Microsoft's DirectCompute, and C++ AMP.\nThird party wrappers are also available for Python, Perl, Fortran, Java, Ruby,\nLua, Haskell, MATLAB, IDL, and native support in Mathematica.\n\nIn the computer game industry, GPUs are used not only for graphics rendering\nbut also in game physics calculations (physical effects like debris, smoke,\nfire, fluids); examples include PhysX and Bullet. CUDA has also been used to\naccelerate non-graphical applications in computational biology, cryptography\nand other fields by an order of magnitude or more. {{cite journal\n| author = Giorgos Vasiliadis, Spiros Antonatos, Michalis Polychronakis,\n| Evangelos P. Markatos and Sotiris Ioannidis title = Gnort: High Performance\n| Network Intrusion Detection Using Graphics Processors journal = Proceedings of\n| the 11th International Symposium on Recent Advances in Intrusion Detection\n| (RAID) month = September year = 2008, Boston, MA, USA url =\n| http://www.ics.forth.gr/dcs/Activities/papers/gnort.raid08.pdf\n|format=PDF}} {{cite journal\n | author = Schatz, M.C., Trapnell, C., Delcher, A.L., Varshney, A. year = 2007\n | url = http://www.biomedcentral.com/1471-2105/8/474\n |title = High-throughput sequence alignment using Graphics Processing Units\n |journal = BMC Bioinformatics\n | volume = 8:474\n |doi = 10.1186/1471-2105-8-474 |pages = 474\n | pmid = 18070356 pmc = 2222658\n}} {{cite journal\n | first = Svetlin A. | last = Manavski coauthors = Giorgio Valle title = CUDA\n | compatible GPU cards as efficient hardware accelerators for Smith-Waterman\n | sequence alignment url = http://www.biomedcentral.com/1471-2105/9/S2/S10\n | journal = BMC Bioinformatics volume = 9|issue=Suppl 2 | year = 2008 doi = 10.1186/1471-2105-9-S2-\n | S10 pages = S10 pmid = 18387198 pmc = 2323659\n}} Pyrit â Google Code\nhttp://code.google.com/p/pyrit/ [http://boinc.berkeley.edu/cuda.php\nUse your Nvidia GPU for scientific computing], BOINC official site (December 18,\n2008)\n\nCUDA provides both a low level API and a higher level API. The initial CUDA SDK\nwas made public on 15 February 2007, for Microsoft Windows and Linux. Mac OS X\nsupport was later added in version 2.0, [http://developer.download.nvidia.c-\nom/compute/cuda/sdk/website/doc/CUDA_SDK_release_notes_macosx.txt Nvidia CUDA\nSoftware Development Kit (CUDA SDK) â Release Notes Version 2.0 for MAC\nOSX] which supersedes the beta released February 14, 2008. [http://news.developer.nvidia.com/2008/02/cuda-11---now-\no.html CUDA 1.1 â Now on Mac OS X]- (Posted on Feb 14, 2008) CUDA works\nwith all Nvidia GPUs from the G8x series onwards, including GeForce, Quadro and\nthe Tesla line. CUDA is compatible with most standard operating systems. Nvidia\nstates that programs developed for the G8x series will also work without\nmodification on all future Nvidia video cards, due to binary compatibility.\n","linknr":545,"url":"CUDA","recorded":1362505116,"links":46,"instances":["software","programming_language","software","programming_language","parallel_computing","programming_language","programming_language","graphics","programming_language","programming","programming_language","computing","programming_language"],"pdf":["http://www.optitex.com/images/downloads/Nvidia_CUDA_SS_OptiTex_FINAL.pdf","http://www.ics.forth.gr/dcs/Activities/papers/gnort.raid08.pdf","http://www.ics.forth.gr/dcs/Activities/papers/gnort.raid08.pdf","http://www.technion.ac.il/~marks/docs/SumProductPaper.pdf","http://www.technion.ac.il/~marks/docs/SumProductPaper.pdf","http://developer.download.nvidia.com/compute/DevZone/docs/html/C/doc/CUDA_C_Programming_Guide.pdf"],"categories":["Nvidia","Graphics hardware","Video cards","Video game hardware","Computer physics engines","GPGPU"],"headings":["Background","Advantages","Limitations","Supported GPUs","Version features and specifications","Example","Language bindings","Current CUDA architectures","Current and future usages of CUDA architecture","See also","References","External links"],"image":["//upload.wikimedia.org/wikipedia/commons/thumb/5/59/CUDA_processing_flow_%28En%29.PNG/300px-CUDA_processing_flow_%28En%29.PNG","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["directive","programming"],["c","programming_language"],["python","programming_language"],["java","programming_language"],["ruby","programming_language"],["lua","programming_language"],["haskell","programming_language"],["idl","programming_language"],["bullet","software"],["list","computing"],["ray_tracing","graphics"],["haskell","programming_language"],["idl","programming_language"],["java","programming_language"],["lua","programming_language"],["jacket","software"],["python","programming_language"],["ruby","programming_language"],["vectorization","parallel_computing"]],"members":["bullet","python","jacket","java","vectorization","ruby","c","ray_tracing","haskell","directive","idl","list","lua"],"related":["NVIDIA_Corporation","Windows_XP","Timeline_of_Microsoft_Windows","Mac_OS_X","Linux","GPGPU","Freeware","Parallel_computing","NVIDIA","Graphics_processing_unit","Instruction_set","CPU","GPGPU","Directive_(programming)","C_(programming_language)","C++","Fortran","LLVM","The_Portland_Group","Khronos_Group","OpenCL","DirectCompute","C++_AMP","Python_(programming_language)","Perl","Fortran","Java_(programming_language)","Ruby_(programming_language)","Lua_(programming_language)","Haskell_(programming_language)","MATLAB","IDL_(programming_language)","Mathematica","Computer_game","Physics_processing_unit","PhysX","Bullet_(software)","Computational_biology","Cryptography","Order_of_magnitude","API","Software_development_kit","Microsoft_Windows","Linux","Mac_OS_X","NVidia_GeForce","Nvidia_Quadro","Nvidia_Tesla","Computer_processor","Real-time_computer_graphics","3D_graphics","Multi_core","Central_processing_unit","Algorithm","Push-relabel_maximum_flow_algorithm","Sort_algorithm","List_(computing)","Fast_wavelet_transform","Molecular_dynamics","Shared_memory","Scratchpad_RAM","SIMD","Space_partitioning","Ray_tracing_(graphics)","OpenCL","Double_precision_floating-point_format","IEEE_754","Single_precision_floating-point_format","Denormal_number","NaN","Rounding","GeForce","GeForce","Nvidia_Quadro","Nvidia_Quadro","Nvidia_Tesla","1,2,3","4,5,6","2,3","6,7","Fortran","Haskell_(programming_language)","IDL_(programming_language)","Java_(programming_language)","Lua_(programming_language)","Mathematica","MATLAB","Jacket_(software)",".NET_Framework","Perl","Python_(programming_language)","Ruby_(programming_language)","GeForce_400_Series","C++","Nvidia_Tesla","Visual_Studio","Encryption","Decryption","Data_compression","Proteins","Virtual_reality","X-ray_computed_tomography","Magnetic_resonance_imaging","Fluid_dynamics","Distributed_computing","GPGPU","OpenCL","DirectCompute","BrookGPU","Vectorization_(parallel_computing)","Stream_processing","RCUDA"]}