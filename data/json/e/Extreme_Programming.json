{"cursor":"33143","size":15,"audio":[],"currentlang":"en","article":"\n\n'Extreme Programming (XP)' is a software development methodology which is\nintended to improve software quality and responsiveness to changing customer\nrequirements. As a type of agile software development, \"Human Centred Technology Workshop 2005\", 2005, PDF webpage: [ftp://ftp.informatics.sussex.ac.uk/pub/reports/csrp/csrp585.pdf Informatics-UK-report-\ncdrp585].  it advocates\nfrequent \"releases\" in short development cycles, which is intended to\nimprove productivity and introduce checkpoints where new customer\nrequirements can be adopted.\n\nOther elements of Extreme Programming include: programming in pairs or doing\nextensive code review, unit testing of all code, avoiding programming of\nfeatures until they are actually needed, a flat management structure,\nsimplicity and clarity in code, expecting changes in the customer's\nrequirements as time passes and the problem is better understood, and\nfrequent communication with the customer and among programmers. \"Design Patterns and Refactoring\", University of\nPennsylvania, 2003, webpage: [http://www.cis.upenn.edu/~matuszek/cit591-2003/Lectures/49-design-\npatterns.ppt UPenn-Lectures-design-patterns]. \n\"Extreme Programming\"\n[http://www.cs.usfca.edu/~parrt/course/601/lectures/xp.html USFCA-edu-601-\nlecture].  \"Manifesto for Agile Software\nDevelopment\", Agile Alliance, 2001, webpage: [http://agilemanifesto.org/ Manifesto-for-Agile-Software-\nDev]  The methodology takes its name from the idea that the beneficial\nelements of traditional software engineering practices are taken to\n\"extreme\" levels.\n\nCritics have noted several potential drawbacks, including\nproblems with unstable requirements, no documented compromises of user\nconflicts, and a lack of an overall design specification or document.\n","linknr":541,"url":"Extreme_Programming","recorded":1362688611,"links":55,"instances":["development"],"pdf":["http://www.sei.cmu.edu/library/assets/jarvis-gristock.pdf"],"categories":["Extreme programming|","Software development philosophies","Agile software development"],"headings":["History","Concept","Practices","Controversial aspects","Criticism","See also","References","Further reading","External links"],"image":["//upload.wikimedia.org/wikipedia/commons/thumb/4/44/XP-feedback.gif/240px-XP-feedback.gif","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/6/64/Coding_Shots_Annual_Plan_high_res-5.jpg/220px-Coding_Shots_Annual_Plan_high_res-5.jpg","//upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Crystal_Clear_app_kedit.svg/40px-Crystal_Clear_app_kedit.svg.png","//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png","//upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/16px-Folder_Hexagonal_Icon.svg.png","//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/12px-Commons-logo.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["scrum","development"]],"members":["scrum"],"related":["Software_development_methodology","Agile_software_development","Pair_programming","Code_review","Unit_testing","Kent_Beck","Chrysler_Comprehensive_Compensation_System","Project_management","Best_practices","Project_Mercury","Acceptance_testing","Object-oriented_programming","Procedural_programming","Dot-com_boom","Product_life_cycle_management","Chrysler_Comprehensive_Compensation_System","Smalltalk","Gemstone_Database_Management_System","Data_access_layer","Kent_Beck","Performance_tuning","Ward_Cunningham","Ron_Jeffries","Wiki","WikiWikiWeb","Agile_software_development","Hypertext","Integration_test","Unit_test","Acceptance_test","Integration_testing","Business_logic","Planning_game","You_aren't_gonna_need_it","Unit_test","Acceptance_tests","Kent_Beck","Refactoring","Pair_programming","Planning_game","Test-driven_development","Continuous_integration","Refactoring","Unit_test","Program_optimization","Overtime","Unit_tests","Unit_tests","Software_bug","Acceptance_tests","Scope_creep","Big_Design_Up_Front","Debugging","Customer_representative","Project","Micro-management","ThoughtWorks","Socialism","Waterfall_model","JPMorgan_Chase_&_Co.","Capability_Maturity_Model_Integration","Six_Sigma","Pair_programming","Continuous_design","Scope_creep","User_story","Agile_software_development","Continuous_obsolescence","Extreme_project_management","Extreme_programming_practices","Kaizen","List_of_software_development_philosophies","Pair_programming","Scrum_(development)","Software_engineering","Software_craftsmanship","Stand-up_meeting","Timeboxing","Ken_Auer","Kent_Beck","Kent_Beck","Martin_Fowler","Kent_Beck","Alistair_Cockburn","Martin_Fowler","Harvey_Herela","Jim_Highsmith","Ron_Jeffries","Craig_Larman","Matt_Stephens","ThoughtWorks"]}