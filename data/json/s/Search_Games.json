{"cursor":"3712","size":15,"audio":[],"currentlang":"en","article":"A 'search game' is a two-person zero-sum game which takes place in a set called\nthe search space. The searcher can choose any continuous trajectory subject to a\nmaximal velocity constraint. It is always assumed that neither the searcher nor\nthe hider has any knowledge about the movement of the other player until their\ndistance apart is less than or equal to the discovery radius and at this very\nmoment capture occurs. As mathematical models, search games can be applied to\nareas such as hide-and-seek games that children play or representations of some\ntactical military situations. The area of search games was introduced in the\nlast chapter of Rufus Isaacs' classic book \"Differential Games\" Rufus\nIsaacs, Differential Games, John Wiley and Sons, (1965), and has been\ndeveloped further by Shmuel Gal S. Gal, Search Games, Academic Press, New\nYork (1980) S. Alpern and S. Gal, The Theory of\nSearch Games and Rendezvous, Springer (2003). and Steve Alpern.\n\nWhat is the best way to search a stationary target in a graph? A natural\nstrategy is to find a minimal closed curve L that covers all the arcs of the\ngraph. (L is called a Chinese postman tour). Then, encircle L with probability\n1/2 for each direction. This strategy seems to work well if the graph is\nEulerian. In general, this random Chinese postman tour is indeed an optimal\nsearch strategy if and only if the graph consists of a set of Eulerian graphs\nconnected in a tree-like structure. S. Gal, On the optimality of a simple\nstrategy for searching graphs, Int. J. Game Theory (2000). A misleadingly\nsimple example of a graph not in this family consists of two nodes connected by\nthree arcs. The random Chinese postman tour (equivalent to traversing the three\narcs in a random order) is not optimal. The optimal way to search these three\narcs is surprisingly complicated [2] .\n\nThe princess and monster game deals with a moving target.\n\nSearching unbounded domains is also interesting. In general, the reasonable\nframework, as in the case of an online algorithm, is to use a normalized cost\nfunction (called the competitive ratio in Computer Science literature). The\nminimax trajectory for problems of these types is always a geometric sequence\n(or exponential function for continuous problems). This result yields an easy\nmethod to find the minimax trajectory by minimizing over a single parameter (the\ngenerator of this sequence) instead of searching over the whole trajectory\nspace. This tool has been used for the linear search problem, i.e., finding a\ntarget on the infinite line, which has attracted much attention over several\ndecades and has been analyzed as a search game. A. Beck and D.J. Newman. Yet\nMore on the linear search problem. Israel J. Math. (1970). It has also\nbeen used to find a minimax trajectory for searching a set of concurrent rays.\nOptimal searching in the plane is performed by using exponential spirals. M. Chrobak, A princess swimming in the fog looking for\na monster cow, ACM Sigact news, 35(2), 74â78 (2004). Searching a set of\nconcurrent rays was later re-discovered in Computer Science literature as the\n'cow-path problem'. MY Kao, JH Reif and SR Tate, Searching in an unknown\nenvironment: an optimal randomized algorithm for the cow-path problem, SODA\n1993.\n","linknr":232,"url":"Search_Games","recorded":1362554237,"links":12,"instances":["game_theorist","online_algorithm","mathematics"],"pdf":[],"categories":["Game theory","Search algorithms"],"headings":["References"],"image":["//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["set","mathematics"],["rufus_isaacs","game_theorist"],["competitive_analysis","online_algorithm"]],"members":["rufus_isaacs","competitive_analysis","set"],"related":["Zero-sum_game","Set_(mathematics)","Rufus_Isaacs_(game_theorist)","Shmuel_Gal","Steve_Alpern","Chinese_postman","Eulerian_path","Princess_and_monster_game","Online_algorithm","Cost_function","Competitive_analysis_(online_algorithm)","Minimax","Linear_search_problem"]}