{"micrownet":[],"duck":["\n<a href=\"http://duckduckgo.com/p_versus_NP_problem\">P = NP problem</a>","\n<a href=\"http://duckduckgo.com/resource_bounded_measure\">Almost complete</a> - Lutz's resource bounded measure is a generalisation of Lebesgue measure to complexity classes.","NP-complete","\n<a href=\"http://duckduckgo.com/c/NP-complete_problems\">NP-complete problems</a>","\n<a href=\"http://duckduckgo.com/Gadget_(computer_science)\">Gadget (computer science)</a> - In computational complexity theory, a gadget is a subset of a problem instance that simulates the behavior of one of the fundamental units of a different computational problem.","\n<a href=\"http://duckduckgo.com/Strongly_NP-complete\">Strongly NP-complete</a> - In computational complexity, strong NP-completeness is a property of computational problems that is a special case of  NP-completeness.","\n<a href=\"http://duckduckgo.com/NP-hard\">NP-hard</a> - NP-hard (Non-deterministic Polynomial-time hard), in computational complexity theory,  is a class of problems that are, informally, \"at least as hard as the hardest problems in NP\".","NP-complete - A set or property of computational decision problems which is a subset of NP, with the additional property that it is also NP-hard.","https://i.duckduckgo.com/i/c4362a6b.png","\n<a href=\"http://duckduckgo.com/c/Complexity_classes\">Complexity classes</a>","\n<a href=\"http://duckduckgo.com/nP-Intermediate\">Ladner's theorem</a> - In computational complexity, problems that are in the complexity class NP but are neither in the class P nor NP-complete are called NP-intermediate, and the class of such problems is called N...","\n<a href=\"http://duckduckgo.com/c/Mathematical_optimization\">Mathematical optimization</a>","In computational complexity theory, the complexity class NP-complete (abbreviated NP-C or NPC) is a class of decision problems."],"common":{"milestones":[],"image":[[],[]]},"Lists":[],"created":1373546476,"book":[],"micro-www":{"npcomplete":[""]},"micro-relation":[]}