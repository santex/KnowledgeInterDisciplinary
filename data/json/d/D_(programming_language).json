{"cursor":"27785","size":15,"audio":[],"currentlang":"en","article":"\n{{Infobox programming language\n| name = D programming language logo = caption = file_ext = .d  paradigm = multi-paradigm: imperative, object-oriented, functional, meta\n| released =  designer = Walter Bright, Andrei\n| Alexandrescu (since 2006) developer = Digital Mars, Andrei Alexandrescu (since\n| 2006) latest_release_version = 2.062 / 1.076\n{{cite web|title=Changelog|\nurl=http://dlang.org/changelog.html| work=D Programming Language 2.0|\npublisher=Digital Mars| accessdate=31 December 2012}} {{cite web|title=Changelog|\nurl=http://www.digitalmars.com/d/1.0/changelog.html| work=D Programming Language\n1.0| publisher=Digital Mars| accessdate=31 December 2012}} () {{cite web| title=dmd 1.076 and 2.062 release|\nurl=http://forum.dlang.org/post/kbvsgo$1po3$1@digitalmars.com| accessdate=16\nJanuary 2013}}\n| typing = strong, static implementations = DMD (reference implementation), GDC,\n| LDC dialects = influenced_by = C, C++, C#, Eiffel, Java, Python, Ruby\n| influenced = MiniD, DScript, Vala, Qore operating_system = DMD: Unix-like,\n| Windows, Mac OS X license = GPL/Artistic (DMD frontend), Boost (standard and runtime libraries), source available (DMD backend), Fully open-source (LDC and GDC) [http://dlang.org/faq.html FAQ of\n                         digitalmars]\n| website = wikibooks = D Programming\n}}\n\nThe 'D programming language' is an object-oriented, imperative, multi-paradigm\nsystem programming language created by Walter Bright of Digital Mars. Though it\noriginated as a re-engineering of C++, D is a distinct language, having\nredesigned some core C++ features while also taking inspiration from other\nlanguages, notably Java, Python, Ruby, C#, and Eiffel.\n\nD's design goals attempt to combine the performance of compiled languages with\nthe safety and expressive power of modern dynamic languages. Idiomatic D code is\ncommonly as fast as equivalent C++ code, while being shorter and memory-safe.\nType inference, automatic memory management and syntactic sugar for common types\nallow faster development, while bounds checking, design by contract features and\na concurrency-aware type system help reduce the occurrence of bugs.\n","linknr":503,"url":"D_(programming_language)","recorded":1362891454,"links":43,"instances":["computer_science","computer_science","java","programming","programming_language","computer_science","programming_language","programming_language","software","computer_science","programming_language","programming_language","programming_language","programming_language"],"pdf":[],"categories":["C programming language family","Class-based programming languages","Multi-paradigm programming languages","Systems programming languages","Programming languages created in the 2000s"],"headings":["Features","History","Implementations","Development tools","Examples","See also","References","Further reading","External links"],"image":["//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/16px-Wikibooks-logo-en-noslogan.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png","//upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/16px-Folder_Hexagonal_Icon.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["c","programming_language"],["c_sharp","programming_language"],["eiffel","programming_language"],["java","programming_language"],["python","programming_language"],["ruby","programming_language"],["vala","programming_language"],["java","programming_language"],["python","programming_language"],["ruby","programming_language"],["c_sharp","programming_language"],["eiffel","programming_language"],["concurrency","computer_science"],["module","programming"],["garbage_collection","computer_science"],["closure","computer_science"],["interface","computer_science"],["java","programming_language"],["c_sharp","programming_language"],["interface","java"],["closure","computer_science"],["map","higher-order_function"],["filter","higher-order_function"],["fold","higher-order_function"],["garbage_collection","computer_science"],["c","programming_language"],["c","programming_language"],["library","computer_science"],["closure","computer_science"],["eclipse","software"],["python","programming_language"]],"members":["library","closure","map","interface","module","fold","python","garbage_collection","filter","java","ruby","eclipse","concurrency","c","vala","eiffel","c_sharp"],"related":["Multi-paradigm_programming_language","Imperative_programming","Object-oriented_programming","Functional_programming","Metaprogramming","Walter_Bright","Andrei_Alexandrescu","Digital_Mars","Andrei_Alexandrescu","Strong_typing","Static_typing","Reference_implementation","C_(programming_language)","C++","C_Sharp_(programming_language)","Eiffel_(programming_language)","Java_(programming_language)","Python_(programming_language)","Ruby_(programming_language)","MiniD","DScript","Vala_(programming_language)","Qore_Language","Unix-like","Microsoft_Windows","Mac_OS_X","GNU_General_Public_License","Artistic_License","Boost_Software_License","Object-oriented_programming","Imperative_programming","Multi-paradigm_programming_language","System_programming_language","Walter_Bright","Digital_Mars","C++","Java_(programming_language)","Python_(programming_language)","Ruby_(programming_language)","C_Sharp_(programming_language)","Eiffel_(programming_language)","Compiled_language","Expressive_power","Dynamic_programming_language","Memory_safety","Type_inference","Automatic_memory_management","Syntactic_sugar","Software_development","Bounds_checking","Design_by_contract","Concurrency_(computer_science)","Software_bug","Design_by_contract","Unit_test","Module_(programming)","Garbage_collection_(computer_science)","First-class_object","Array_data_type","Associative_array","Dynamic_array","Array_slicing","Nested_function","Inner_class","Closure_(computer_science)","Anonymous_functions","Compile_time_function_execution","Lazy_evaluation","Low-level_programming_language","Inline_assembler","Assembly_language","Multiple_inheritance","Multiple_inheritance","Interface_(computer_science)","Mixin","Syntax","Inline_assembler","Java_(programming_language)","C_Sharp_(programming_language)","Assembly_language","Central_processing_unit","Computer_hardware","Operating_system","Device_driver","Documentation_generator","Programming_paradigm","Imperative_programming","Object-oriented","Metaprogramming","Functional_programming","Concurrent_programming_language","Actor_model","Foreach","Nested_function","Local_variable","Interface_(Java)","Mixin","Tuple","Factorial","Type_inference","Compile_time_function_execution","Printf","Domain-specific_language","Functional_programming","Anonymous_function","Closure_(computer_science)","Higher-order_function","Currying","Map_(higher-order_function)","Filter_(higher-order_function)","Fold_(higher-order_function)","Garbage_collection_(computer_science)","Operator_overloading","C_(programming_language)","Malloc","C_(programming_language)","Application_binary_interface","Language_binding","Library_(computer_science)","Component_Object_Model","Walter_Bright","Runtime_library","Standard_library","Breaking_changes","Const-correctness","Closure_(computer_science)","Pure_function","Andrei_Alexandrescu","GitHub","Compiler","Machine_code","Front-end_and_back-end","Artistic_License","GNU_GPL","Source_code","Open_source_license","GNU_Compiler_Collection","Low_Level_Virtual_Machine","Common_Intermediate_Language","Common_Language_Infrastructure","Virtual_machine","Integrated_development_environment","Eclipse_(software)","Microsoft_Visual_Studio","SlickEdit","Emacs","Vim","SciTE","Smultron","TextMate","MonoDevelop","Geany","Ctags","TextMate","Code_completion","Refactoring","Xcode_3","Open_source","Windows","GNU_Debugger","WinDbg","Graphical_user_interface","Python_(programming_language)","Ddoc"]}