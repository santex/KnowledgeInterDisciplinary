{"cursor":"21562","size":15,"audio":[],"currentlang":"en","article":"\n\nIn computer science, a 'call stack' is a stack data structure that stores\ninformation about the active subroutines of a computer program. This kind of\nstack is also known as an 'execution stack', 'control stack', 'run-time stack',\nor 'machine stack', and is often shortened to just \"the stack\". Although\nmaintenance of the call stack is important for the proper functioning of most\nsoftware, the details are normally hidden and automatic in high-level\nprogramming languages.\n\nA call stack is used for several related purposes, but the main reason for\nhaving one is to keep track of the point to which each active subroutine should\nreturn control when it finishes executing. An active subroutine is one that has\nbeen called but is yet to complete execution after which control should be\nhanded back to the point of call. Such activations of subroutines may be nested\nto any level (recursive as a special case), hence the stack structure. If, for\nexample, a subroutine DrawSquare calls a subroutine\nDrawLine from four different places, DrawLine must\nknow where to return when its execution completes. To accomplish this, the\naddress following the call instruction, the return address, is pushed onto the\ncall stack with each call.\n","linknr":248,"url":"Display_register","recorded":1362684440,"links":29,"instances":["programming_language","computer_science","computer_security","computer_science","programming_language","subroutine","computer_science","programming_language","functional_programming","computer_science","computer_science","data_structure","programming_language","computers","computer_science","computing","computer_science","computing","computer_science","computer_programming","computing"],"pdf":[],"categories":["Subroutines","Memory management"],"headings":["Description","Functions of the call stack","Structure","Use","Call stack inspection","Performance analysis","Security","See also","Notes","References","External links"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Call_stack_layout.svg/342px-Call_stack_layout.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["stack","data_structure"],["instruction","computer_science"],["stack","data_structure"],["pop","computer_programming"],["crash","computing"],["task","computers"],["thread","computer_science"],["process","computing"],["signal","computing"],["abstraction","computer_science"],["reentrant","subroutine"],["recursion","computer_science"],["parameter","computer_science"],["this","computer_science"],["object","computer_science"],["instance","computer_science"],["pascal","programming_language"],["ada","programming_language"],["forth","programming_language"],["forth","programming_language"],["scheme","programming_language"],["thunk","functional_programming"],["exploit","computer_security"]],"members":["forth","object","exploit","instruction","pascal","reentrant","abstraction","ada","thunk","this","recursion","stack","scheme","task","instance","process","parameter","signal","thread","pop","crash"],"related":["Computer_science","Stack_(data_structure)","Subroutine","Computer_program","Software","High-level_programming_language","Memory_address","Instruction_(computer_science)","Stack_(data_structure)","Pop_(computer_programming)","Stack_overflow","Crash_(computing)","Task_(computers)","Thread_(computer_science)","Process_(computing)","Signal_(computing)","Cooperative_multitasking","Setcontext","Forth_programming_language","High-level_programming_language","Abstraction_(computer_science)","Assembly_language","Programming_language","Compiler","Operating_system","Instruction_set","Reentrant_(subroutine)","Recursion_(computer_science)","Local_variable","Dynamic_memory_allocation","Parameter_(computer_science)","Processor_register","RPN_calculator","Object-oriented_language","C++","This_(computer_science)","Object_(computer_science)","Instance_(computer_science)","Pascal_(programming_language)","Ada_(programming_language)","Nested_functions","Burroughs_large_systems","Forth_(programming_language)","Floating_point","Machine_dependent","Application_binary_interface","Compiler","Nested_function","Burroughs_large_systems","Calling_convention","Function_prologue","Forth_(programming_language)","Pascal_programming_language","GOTO","Object_Pascal","Exception_handling","Common_Lisp","Continuation","Scheme_(programming_language)","Thunk_(functional_programming)","Performance_analysis","Deep_sampling","Exploit_(computer_security)","Buffer_overflow","Automatic_memory_allocation","Calling_convention","Dynamic_memory_allocation","Segmented_stack","Stack-based_memory_allocation","Stack_buffer_overflow","Stack_machine","Stack_overflow"]}