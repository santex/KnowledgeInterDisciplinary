{"cursor":"7259","size":15,"audio":[],"currentlang":"en","article":"{{Infobox software\n| name = GNU Multiple Precision Arithmetic Library logo = screenshot = caption =\n| developer = GNU Project released =  frequently updated =\n| yes programming language = C, (C++, assembly optionally) operating system =\n| Cross-platform genre = Mathematical software license = LGPL website =\n}}\n\nThe 'GNU Multiple Precision Arithmetic Library' ('GMP') is a free library for\narbitrary-precision arithmetic, operating on signed integers, rational numbers,\nand floating point numbers. [http://gmplib.org/#WHAT What is GMP?]\nThere are no practical limits to the precision except the ones implied by the\navailable memory in the machine GMP runs on (operand dimension limit is 2 32 -\n1 bits on 32-bit machines and 2 37 bits on 64-bit machines). [http://gmplib.org/list-archives/gmp-bugs/2009-\nJuly/001538.html Problems with mpz_set_str and huge strings] GMP has a\nrich set of functions, and the functions have a regular interface. The basic\ninterface is for C but wrappers exist for other languages including Ada, C++,\nC#, OCaml, Perl, PHP, and Python. In the past, the Kaffe Java virtual machine\nused GMP to support Java built-in arbitrary precision arithmetic. This feature\nhas been removed from recent releases, causing protests from people who claim\nthat they used Kaffe solely for the speed benefits afforded by GMP. http://www.mail-\narchive.com/kaffe@kaffe.org/msg13209.html As a result, GMP support has\nbeen added to GNU Classpath. http://www.gnu.org/software/classpath/announce-\n/20090205.html\n\nThe main target applications of GMP are cryptography applications and research,\nInternet security applications, and computer algebra systems.\n\nGMP aims to be faster than any other bignum library for all operand sizes. Some\nimportant factors in doing this are:\n* Using full words as the basic arithmetic type.\n* Using different algorithms for different operand sizes; algorithms that are\n  faster for very big numbers are usually slower for small numbers.\n* Highly optimized assembly language code for the most important inner loops,\n  specialized for different processors.\n\nThe first GMP release was made in 1991. It is constantly developed and\nmaintained. , the release is 5.1.1.\n\nGMP is part of the GNU project (although its website being off gnu.org may\ncause confusion), and is distributed under the GNU Lesser General Public\nLicense (LGPL).\n\nGMP is used for integer arithmetic in many computer algebra systems such as Mat-\nhematica [http://library.wolfram.com/infocenter/Conferences/7518/Macalester-\n_talk.txt The Mathematica Kernel: Issues in the Design and Implementation]\nand Maple. [http://www.maplesoft.com/support/help/AddOns/view.aspx?path=GMP\nThe GNU Multiple Precision (GMP) Library] It is also used in the\nComputational Geometry Algorithms Library (CGAL) because geometry algorithms\ntend to 'explode' when using ordinary floating point CPU math. See\ndocumentation at [http://www.cgal.org CGAL.org]\n\nGMP is needed to build the GNU Compiler Collection (GCC). GCC uses the MPFR\nlibrary, which in turn relies on GMP. [http://gcc.gnu.org/gcc-\n4.3/changes.html#mpfropts GCC 4.3 Release Series Changes, New Features, and\nFixes], last accessed 2010-01-26.\n","linknr":248,"url":"GNU_Multiple_Precision_Arithmetic_Library","recorded":1362567531,"links":25,"instances":["computer_science","programming_language","programming_language","programming_language","software","mathematics_software","programming_language","data_type","computer_programming","programming_language","programming_language","programming_language"],"pdf":[],"categories":["Computer arithmetic","Numerical software","GNU Project software|Multiple Precision Arithmetic Library","C libraries","Free software programmed in C"],"headings":["Example","Language bindings","See also","References","External links"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/2/22/Heckert_GNU_white.svg/64px-Heckert_GNU_white.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["c","programming_language"],["c","programming_language"],["ada","programming_language"],["c_sharp","programming_language"],["python","programming_language"],["java","programming_language"],["word","data_type"],["optimization","computer_science"],["maple","software"],["c","programming_language"],["c_sharp","programming_language"],["python","programming_language"],["ruby","programming_language"],["ch","computer_programming"],["haskell","programming_language"],["mpir","mathematics_software"]],"members":["optimization","python","java","ruby","maple","mpir","c","word","ch","ada","c_sharp","haskell"],"related":["GNU_Project","C_(programming_language)","C++","Assembly_language","Cross-platform","Mathematical_software","GNU_Lesser_General_Public_License","Free_software","Arbitrary-precision_arithmetic","Integer","Rational_number","Floating_point","Virtual_memory","C_(programming_language)","Ada_(programming_language)","C++","C_Sharp_(programming_language)","OCaml","Perl","PHP","Python_(programming_language)","Kaffe","Java_(programming_language)","GNU_Classpath","Cryptography","Computer_algebra_system","Bignum","Word_(data_type)","Algorithm","Operand","Optimization_(computer_science)","Assembly_language","Inner_loop","Central_processing_unit","GNU","GNU_Lesser_General_Public_License","Computer_algebra_system","Mathematica","Maple_(software)","Computational_Geometry_Algorithms_Library","GNU_Compiler_Collection","MPFR","C_(programming_language)","C++","GNU_Lesser_General_Public_License","Perl","C_Sharp_(programming_language)",".NET_Framework","Python_(programming_language)","Ruby_(programming_language)","PHP","PHP_License","Common_Lisp","Ch_(computer_programming)","Glasgow_Haskell_Compiler","Haskell_(programming_language)","BSD_licenses","MPFR","Class_Library_for_Numbers","MPIR_(mathematics_software)"]}