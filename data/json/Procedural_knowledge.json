{"cursor":"7066","size":15,"audio":[],"currentlang":"en","article":"'Procedural knowledge', also known as 'imperative knowledge', is the knowledge\nexercised in the performance of some task. See below for the specific meaning of\nthis term in '[[cognitive psychology]]' and '[[intellectual property]]' law.\n\nProcedural knowledge, or implicit knowledge is different from other kinds of\nknowledge, such as declarative knowledge, in that it can be directly applied to\na task. For instance, the procedural knowledge one uses to solve problems\ndiffers from the declarative knowledge one possesses about problem solving\nbecause this knowledge is formed by doing. Koedinger, K.R. &\nCorbett, A. (2006). Technology Bringing Learning Sciences to the Classroom. In\nSawyer, R.K. (Ed.), The Cambridge Handbook of the Learning Sciences (61-75). New\nYork: Cambridge University Press\n\nIn some legal systems, such procedural knowledge has been considered the\nintellectual property of a company, and can be transferred when that company is\npurchased.\n\nOne limitation of procedural knowledge is its job-dependence; thus it tends to\nbe less general than declarative knowledge. For example, a computer expert might\nhave knowledge about a computer algorithm in multiple languages, or in pseudo-\ncode, whereas a Visual Basic programmer might only know about a specific\nimplementation of that algorithm, written in Visual Basic. Thus the 'hands-on'\nexpertise and experience of the Visual Basic programmer might be of commercial\nvalue only to Microsoft job-shops, for example.\n\nOne advantage of procedural knowledge is that it can involve more senses, such\nas hands-on experience, practice at solving problems, understanding of the\nlimitations of a specific solution, etc. Thus procedural knowledge can\nfrequently eclipse theory.\n","linknr":139,"url":"Procedural_knowledge","recorded":1362690141,"links":14,"instances":["game_designer","2008_video_game","philosophy"],"pdf":[],"categories":["Skills","Procedural knowledge|*","Technical communication"],"headings":["Contexts","Notes","See also","External links"],"image":["//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["knowledge","philosophy"],["will_wright","game_designer"],["spore","2008_video_game"]],"members":["will_wright","spore","knowledge"],"related":["Implicit_knowledge","Knowledge","Declarative_knowledge","Problem_solving","Intellectual_property","Knowledge","Sense","Intelligent_agent","Finite-state_machine","Computer_program","Procedural_Reasoning_System","Declarative_knowledge","Computer_planning","Declarative_knowledge","Pawel_Lewicki","Trade_secret","Patent","Trademark","Algorithm","Descriptive_knowledge","Descriptive_science","Experience","Heuristic","How-to","Imperative_mood","Idea","Inquiry","Instructional_capital","Knowhow","Knowledge","Knowledge_tags","Knowledge_(philosophy)","Scientific_method","Normative_science","Procedural_memory","Trial_and_error","Will_Wright_(game_designer)","Games_Developers_Conference","Spore_(2008_video_game)"]}