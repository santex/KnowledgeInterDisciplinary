{"cursor":"4952","size":15,"audio":[],"currentlang":"en","article":"In computational complexity theory, a complexity class B is said to be 'low' for\na complexity class A if A B = A; that is, A with an oracle for B is\nequal to A. Such a statement implies that an abstract machine which solves\nproblems in A achieves no additional power if it is given the ability to solve\nproblems in B at unit cost. In particular, this means that if B is low for A\nthen B is contained in A. Informally, lowness means that problems in B are not\nonly solvable by machines which can solve problems in A, but are \"easy to\nsolve.\" An A machine can simulate many oracle queries to B without exceeding its\nresource bounds.\n\nResults and relationships that establish one class as low for another are often\ncalled 'lowness' results.\n","linknr":121,"url":"Low_(complexity)","recorded":1362477739,"links":11,"instances":["complexity","complexity","computability","complexity","complexity"],"pdf":["http://www.cs.rutgers.edu/~allender/538/murata3.pdf"],"categories":["Computational complexity theory"],"headings":["Results","Applications","See also","References"],"image":["//upload.wikimedia.org/math/8/b/6/8b6a082c8031b3684c62aeb6333f8e02.png","//upload.wikimedia.org/math/8/b/6/8b6a082c8031b3684c62aeb6333f8e02.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["p","complexity"],["l","complexity"],["complement","complexity"],["pp","complexity"],["pp","complexity"],["low","computability"]],"members":["l","p","low","pp","complement"],"related":["Computational_complexity_theory","Complexity_class","Oracle_machine","Abstract_machine","P_(complexity)","PSPACE","L_(complexity)","Bounded-error_probabilistic_polynomial","BQP","SIAM_Journal_on_Computing","Complement_(complexity)","Polynomial_hierarchy","EXP","Parity_P","Bounded-error_probabilistic_polynomial","Toda's_theorem","BQP","PP_(complexity)","Randomized_algorithm","Quantum_computer","Graph_isomorphism_problem","Parity_P","Amplified_PP","PP_(complexity)","Low_(computability)"]}