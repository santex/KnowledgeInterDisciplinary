{"cursor":"5130","size":15,"audio":[],"currentlang":"en","article":"This is a list of approaches, styles, and philosophies in software development.\nIt contains also software development processes, software development\nmethodologies and single practices, principles and laws.\n\n* Abstraction principle (programming)\n* Agent-oriented programming\n* Agile software development\n* Agile Unified Process (AUP)\n* Aspect-oriented Programming (AOP)\n* Behavior-driven development (BDD)\n* Big Design Up Front (BDUF)\n* Black box engineering\n* Brooks's law\n* Cathedral and the Bazaar (see also Release early, release often (RERO))\n* Chief programmer team\n* CMMI\n* Code and fix\n* Code reuse\n* Cohesion (computer science)\n* Cone of Uncertainty\n* Constructionist design methodology (CDM)\n* Continuous integration\n* Control tables\n* Convention over configuration\n* Conway's Law\n* Coupling (computer programming)\n* Cowboy coding\n* Crystal Clear\n* Dependency injection\n* Design by Contract (DbC)\n* Design competition\n* Design-driven development (D3)\n* Design Driven Testing (DDT)\n* Domain-Driven Design (DDD)\n* Design for Test (DFT)\n* Don't Make Me Think (book by Steve Krug about human computer interaction and\n  web usability)\n* Don't repeat yourself (DRY) or Duplication is Evil (DIE) or Once and Only Once\n  (OAOO), Single Point of Truth (SPoT), Single Source Of Truth (SSOT)\n* Dynamic Systems Development Method (DSDM)\n* Easier to Ask Forgiveness than Permission (EAFP)\n* Encapsulation (computer science)\n* Evolutionary prototyping\n* Extreme Programming (XP)\n* Feature Driven Development (FDD)\n* Free software license\n* Good Enough For Now (GEFN)\n* General Responsibility Assignment Software Patterns (GRASP)\n* Hollywood Principle\n* Information Hiding\n* Interface (computer science)\n* Interface (object-oriented programming)\n* Inversion of control\n* Iterative and incremental development\n* Joint application design, aka JAD or \"Joint Application Development\"\n* Kaizen\n* Kanban\n* KISS principle original (Keep It Simple and Stupid), derogatory (Keep It\n  Simple, Stupid!)\n* Law of Demeter (LoD)\n* Lean software development\n* Lean-To-Adaptive Prototyping in Parallel (L2APP)\n  [http://www.scirp.org/journal/PaperInformation.aspx?paperID=17474]\n* Literate Programming\n* Microsoft Solutions Framework (MSF)\n* Model-driven architecture (MDA)\n* MoSCoW Method\n* Naked Objects\n* Open source\n* Open/closed principle\n* Open Unified Process\n* Pair programming\n* Principle of least astonishment (POLA/PLA)\n* Principle of good enough (POGE)\n* Project triangle\n* Program optimization\n* Program to an interface, not an implementation\n* Protocol (object-oriented programming)\n* Quick-and-dirty\n* Rapid application development (RAD)\n* Rapid prototyping\n* Rational Unified Process (RUP)\n* Refactoring\n* Release early, release often (RERO) - see also The Cathedral and the Bazaar\n* Responsibility-driven design (RDD)\n* the Right thing, or the MIT approach, as contrasted with the New Jersey style,\n  Worse is better.\n* Scrum\n* Secure by design\n* Separation of concerns (SoC)\n* Service-oriented modeling\n* Single responsibility principle\n* Software craftsmanship\n* Software System Safety\n* SOLID (object-oriented design)\n* Spiral model\n* Stepwise Refinement\n* Structured Systems Analysis and Design Method (SSADM)\n* SUMMIT Ascendant (now IBM Rational SUMMIT Ascendant)\n* Team Software Process (TSP)\n* Test-driven development (TDD)\n* [http://c2.com/cgi/wiki?TgpMethodology Type-Generic-Profile] (TGP) definition\n  at Wards Wiki\n* Two Tracks Unified Process (2TUP)\n* Ubuntu philosophy\n* Unified Process (UP)\n* Unix philosophy\n* User-centered design (UCD)\n* V-Model\n* Hybrid V-Model [http://community.iiba.org/vb/showthread.php?p=1098#post1098]\n* Waterfall model\n* Wheel and spoke model\n* When it's ready [http://blog.mozilla.com/ftr/2008/02/11/when-its-ready/]\n* Win-Win Model\n* Worse is better (New Jersey style, as contrasted with the MIT approach)\n* You Aren't Gonna Need It (YAGNI)\n* Zero one infinity rule\n","linknr":199,"url":"List_of_software_development_philosophies","recorded":1375087915,"links":["/w/index.php?title=List_of_software_development_philosophies&action=edit","/w/index.php?title=List_of_software_development_philosophies&action=edit","//bits.wikimedia.org/favicon/wikipedia.ico","/w/opensearch_desc.php","//en.wikipedia.org/w/api.php?action=rsd","//creativecommons.org/licenses/by-sa/3.0/","/w/index.php?title=Special:RecentChanges&feed=atom","//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&lang=en&modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cteahouse%7Cext.rtlcite%2Cwikihiero%7Cext.uls.nojs%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmw.PopUpMediaTransform%7Cskins.vector&only=styles&skin=vector&*","//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&lang=en&modules=site&only=styles&skin=vector&*","//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&lang=en&modules=startup&only=scripts&skin=vector&*","//bits.wikimedia.org/geoiplookup","//meta.wikimedia.org","#mw-navigation","#p-search","/wiki/Software_development_process","/wiki/Software_development_methodology","/wiki/Abstraction_principle_(programming)","/wiki/Agent-oriented_programming","/wiki/Agile_software_development","/wiki/Agile_Unified_Process","/wiki/Aspect-oriented_Programming","/wiki/Behavior-driven_development","/wiki/Big_Design_Up_Front","/wiki/Black_box_engineering","/wiki/Brooks%27s_law","/wiki/The_Cathedral_and_the_Bazaar","/wiki/Release_early,_release_often","/wiki/Chief_programmer_team","/wiki/CMMI","/wiki/Code_and_fix","/wiki/Code_reuse","/wiki/Cohesion_(computer_science)","/wiki/Cone_of_Uncertainty","/wiki/Constructionist_design_methodology","/wiki/Continuous_integration","/wiki/Control_table","/wiki/Convention_over_configuration","/wiki/Conway%27s_Law","/wiki/Coupling_(computer_programming)","/wiki/Cowboy_coding","/wiki/Crystal_Clear_(software_development)","/wiki/Dependency_injection","/wiki/Design_by_contract","/wiki/Design_competition","/wiki/Design-driven_development","/w/index.php?title=Design_Driven_Testing&action=edit&redlink=1","/wiki/Domain-Driven_Design","/wiki/Design_for_Test","/wiki/Don%27t_Make_Me_Think","/wiki/Steve_Krug","/wiki/Human_computer_interaction","/wiki/Web_usability","/wiki/Don%27t_repeat_yourself","/wiki/Single_Point_of_Truth","/wiki/Single_Source_of_Truth","/wiki/Dynamic_Systems_Development_Method","/wiki/Python_syntax_and_semantics#Exceptions","/wiki/Encapsulation_(computer_science)","/wiki/Evolutionary_prototyping","/wiki/Extreme_Programming","/wiki/Feature_Driven_Development","/wiki/Free_software_license","/w/index.php?title=Good_Enough_For_Now&action=edit&redlink=1","/wiki/GRASP_(object-oriented_design)","/wiki/Hollywood_Principle","/wiki/Information_Hiding","/wiki/Interface_(computer_science)","/wiki/Interface_(object-oriented_programming)","/wiki/Inversion_of_control","/wiki/Iterative_and_incremental_development","/wiki/Joint_application_design","/wiki/Kaizen","/wiki/Kanban_(development)","/wiki/KISS_principle","/wiki/Law_of_Demeter","/wiki/Lean_software_development","/w/index.php?title=Lean-To-Adaptive_Prototyping_in_Parallel&action=edit&redlink=1","http://www.scirp.org/journal/PaperInformation.aspx?paperID=17474","/wiki/Literate_Programming","/wiki/Microsoft_Solutions_Framework","/wiki/Model-driven_architecture","/wiki/Moscow_Method","/wiki/Naked_objects","/wiki/Open_source","/wiki/Open/closed_principle","/wiki/OpenUP","/wiki/Pair_programming","/wiki/Principle_of_least_astonishment","/wiki/Principle_of_good_enough","/wiki/Project_triangle","/wiki/Program_optimization","/w/index.php?title=Program_to_an_interface,_not_an_implementation&action=edit&redlink=1","/wiki/Protocol_(object-oriented_programming)","/wiki/Quick-and-dirty","/wiki/Rapid_application_development","/wiki/Rapid_prototyping","/wiki/IBM_Rational_Unified_Process","/wiki/Code_refactoring","/wiki/Release_early,_release_often","/wiki/The_Cathedral_and_the_Bazaar","/wiki/Responsibility-driven_design","/wiki/Right_Thing_(software_development)","/wiki/Worse_is_better","/wiki/Scrum_(development)","/wiki/Secure_by_design","/wiki/Separation_of_concerns","/wiki/Service-oriented_modeling","/wiki/Single_responsibility_principle","/wiki/Software_craftsmanship","/wiki/Software_System_Safety","/wiki/SOLID_(object-oriented_design)","/wiki/Spiral_model","/wiki/Stepwise_Refinement","/wiki/Structured_Systems_Analysis_and_Design_Method","/w/index.php?title=SUMMIT_Ascendant&action=edit&redlink=1","/wiki/Team_Software_Process","/wiki/Test-driven_development","http://c2.com/cgi/wiki?TgpMethodology","/w/index.php?title=Two_Tracks_Unified_Process&action=edit&redlink=1","/wiki/Ubuntu_(philosophy)#In_popular_culture","/wiki/Unified_Process","/wiki/Unix_philosophy","/wiki/User-centered_design","/wiki/V-Model_(software_development)","/w/index.php?title=Hybrid_V-Model_(software_development)&action=edit&redlink=1","http://community.iiba.org/vb/showthread.php?p=1098#post1098","/wiki/Waterfall_model","/wiki/Wheel_and_spoke_model","/w/index.php?title=When_it%27s_ready&action=edit&redlink=1","http://blog.mozilla.com/ftr/2008/02/11/when-its-ready/","/w/index.php?title=Win-Win_Model&action=edit&redlink=1","/wiki/Worse_is_better","/wiki/You_Aren%27t_Gonna_Need_It","/wiki/Zero_one_infinity_rule","/wiki/Wikipedia:WikiProject_Lists#Incomplete_lists","//en.wikipedia.org/w/index.php?title=List_of_software_development_philosophies&action=edit","/w/index.php?title=List_of_software_development_philosophies&action=edit&section=1","/wiki/Anti-pattern","/wiki/Design_pattern_(computer_science)","/wiki/Programming_paradigm","/wiki/Software_development_methodology","/wiki/Software_development_process","//en.wikipedia.org/w/index.php?title=Special:CentralAutoLogin/start&type=1x1&from=enwiki","http://en.wikipedia.org/w/index.php?title=List_of_software_development_philosophies&oldid=566010445","/wiki/Help:Categories","/wiki/Category:Software_development_philosophies","/wiki/Category:Incomplete_lists_from_February_2011","/w/index.php?title=Special:UserLogin&returnto=List+of+software+development+philosophies&type=signup","/w/index.php?title=Special:UserLogin&returnto=List+of+software+development+philosophies","/wiki/List_of_software_development_philosophies","/wiki/Talk:List_of_software_development_philosophies","#","/wiki/List_of_software_development_philosophies","/w/index.php?title=List_of_software_development_philosophies&action=edit","/w/index.php?title=List_of_software_development_philosophies&action=history","#","/w/index.php","//bits.wikimedia.org/static-1.22wmf11/skins/vector/images/search-ltr.png?303-4","/wiki/Main_Page","/wiki/Main_Page","/wiki/Portal:Contents","/wiki/Portal:Featured_content","/wiki/Portal:Current_events","/wiki/Special:Random","//donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&utm_medium=sidebar&utm_campaign=C13_en.wikipedia.org&uselang=en","/wiki/Help:Contents","/wiki/Wikipedia:About","/wiki/Wikipedia:Community_portal","/wiki/Special:RecentChanges","//en.wikipedia.org/wiki/Wikipedia:Contact_us","/wiki/Special:WhatLinksHere/List_of_software_development_philosophies","/wiki/Special:RecentChangesLinked/List_of_software_development_philosophies","/wiki/Wikipedia:File_Upload_Wizard","/wiki/Special:SpecialPages","/w/index.php?title=List_of_software_development_philosophies&oldid=566010445","/w/index.php?title=List_of_software_development_philosophies&action=info","//www.wikidata.org/wiki/Q6639721","/w/index.php?title=Special:Cite&page=List_of_software_development_philosophies&id=566010445","/w/index.php?title=Special:Book&bookcmd=book_creator&referer=List+of+software+development+philosophies","/w/index.php?title=Special:Book&bookcmd=render_article&arttitle=List+of+software+development+philosophies&oldid=566010445&writer=rl","/w/index.php?title=List_of_software_development_philosophies&printable=yes","//es.wikipedia.org/wiki/Anexo:Filosof%C3%ADas_del_desarrollo_de_software","//fa.wikipedia.org/wiki/%D9%81%D9%87%D8%B1%D8%B3%D8%AA_%D9%81%D9%84%D8%B3%D9%81%D9%87%E2%80%8C%D9%87%D8%A7%DB%8C_%D8%AA%D9%88%D8%B3%D8%B9%D9%87_%D9%86%D8%B1%D9%85%E2%80%8C%D8%A7%D9%81%D8%B2%D8%A7%D8%B1","#","//www.wikidata.org/wiki/Q6639721#sitelinks-wikipedia","//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License","//creativecommons.org/licenses/by-sa/3.0/","//wikimediafoundation.org/wiki/Terms_of_Use","//wikimediafoundation.org/wiki/Privacy_policy","//www.wikimediafoundation.org/","//wikimediafoundation.org/wiki/Privacy_policy","/wiki/Wikipedia:About","/wiki/Wikipedia:General_disclaimer","//en.wikipedia.org/wiki/Wikipedia:Contact_us","//en.m.wikipedia.org/wiki/List_of_software_development_philosophies","//wikimediafoundation.org/","//bits.wikimedia.org/images/wikimedia-button.png","//www.mediawiki.org/","//bits.wikimedia.org/static-1.22wmf11/skins/common/images/poweredby_mediawiki_88x31.png","//bits.wikimedia.org/en.wikipedia.org/load.php?debug=false&lang=en&modules=site&only=scripts&skin=vector&*"],"instances":["software_development","computer_science","development","software_development","development","computer_science","computer_programming","software_development","computer_science","programming","software_development"],"pdf":[],"categories":["Software development philosophies|"],"headings":["See also"],"image":["//en.wikipedia.org/w/index.php?title=Special:CentralAutoLogin/start&type=1x1&from=enwiki","//bits.wikimedia.org/static-1.22wmf11/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.22wmf11/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["abstraction_principle","programming"],["cohesion","computer_science"],["coupling","computer_programming"],["crystal_clear","software_development"],["encapsulation","computer_science"],["grasp","object-oriented_design"],["interface","computer_science"],["interface","object-oriented_programming"],["kanban","development"],["protocol","object-oriented_programming"],["right_thing","software_development"],["scrum","development"],["solid","object-oriented_design"],["ubuntu","philosophy#in_popular_culture"],["v-model","software_development"],["hybrid_v-model","software_development"],["design_pattern","computer_science"]],"members":["protocol","solid","right_thing","grasp","cohesion","interface","scrum","kanban","design_pattern","coupling","crystal_clear","ubuntu","encapsulation","abstraction_principle"],"related":["Software_development_process","Software_development_methodology","Abstraction_principle_(programming)","Agent-oriented_programming","Agile_software_development","Agile_Unified_Process","Aspect-oriented_Programming","Behavior-driven_development","Big_Design_Up_Front","Black_box_engineering","Brooks's_law","The_Cathedral_and_the_Bazaar","Release_early,_release_often","Chief_programmer_team","CMMI","Code_and_fix","Code_reuse","Cohesion_(computer_science)","Cone_of_Uncertainty","Constructionist_design_methodology","Continuous_integration","Control_table","Convention_over_configuration","Conway's_Law","Coupling_(computer_programming)","Cowboy_coding","Crystal_Clear_(software_development)","Dependency_injection","Design_by_contract","Design_competition","Design-driven_development","Design_Driven_Testing","Domain-Driven_Design","Design_for_Test","Don't_Make_Me_Think","Steve_Krug","Human_computer_interaction","Web_usability","Don't_repeat_yourself","Single_Point_of_Truth","Single_Source_of_Truth","Dynamic_Systems_Development_Method","Encapsulation_(computer_science)","Evolutionary_prototyping","Extreme_Programming","Feature_Driven_Development","Free_software_license","Good_Enough_For_Now","GRASP_(object-oriented_design)","Hollywood_Principle","Information_Hiding","Interface_(computer_science)","Interface_(object-oriented_programming)","Inversion_of_control","Iterative_and_incremental_development","Joint_application_design","Kaizen","Kanban_(development)","KISS_principle","Law_of_Demeter","Lean_software_development","Lean-To-Adaptive_Prototyping_in_Parallel","Literate_Programming","Microsoft_Solutions_Framework","Model-driven_architecture","Moscow_Method","Naked_objects","Open_source","Open/closed_principle","OpenUP","Pair_programming","Principle_of_least_astonishment","Principle_of_good_enough","Project_triangle","Program_optimization","Program_to_an_interface,_not_an_implementation","Protocol_(object-oriented_programming)","Quick-and-dirty","Rapid_application_development","Rapid_prototyping","IBM_Rational_Unified_Process","Code_refactoring","Release_early,_release_often","The_Cathedral_and_the_Bazaar","Responsibility-driven_design","Right_Thing_(software_development)","Worse_is_better","Scrum_(development)","Secure_by_design","Separation_of_concerns","Service-oriented_modeling","Single_responsibility_principle","Software_craftsmanship","Software_System_Safety","SOLID_(object-oriented_design)","Spiral_model","Stepwise_Refinement","Structured_Systems_Analysis_and_Design_Method","SUMMIT_Ascendant","Team_Software_Process","Test-driven_development","Two_Tracks_Unified_Process","Unified_Process","Unix_philosophy","User-centered_design","V-Model_(software_development)","Hybrid_V-Model_(software_development)","Waterfall_model","Wheel_and_spoke_model","When_it's_ready","Win-Win_Model","Worse_is_better","You_Aren't_Gonna_Need_It","Zero_one_infinity_rule","Anti-pattern","Design_pattern_(computer_science)","Programming_paradigm","Software_development_methodology","Software_development_process"]}