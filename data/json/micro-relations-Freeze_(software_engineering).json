{"cursor":"2839","size":15,"audio":[],"currentlang":"en","article":"\nIn software engineering, a 'freeze' is a point in time in the development\nprocess after which the rules for making changes to the source code or related\nresources become more strict, or the period during which those rules are\napplied. A freeze helps move the project forward towards a release or the end\nof an iteration by reducing the scale or frequency of changes, and may be used\nto help meet a roadmap. The exact rules depend on the type of freeze and the\nparticular development process in use; for example, they may include only\nallowing changes which fix bugs, or allowing changes only after thorough\nreview by other members of the development team. They may also specify what\nhappens if a change contrary to the rules is required, such as restarting the\nfreeze period.\n\nTwo common types of freezes are:\n\n* A 'feature freeze', in which all work on adding new features is suspended,\n  shifting the effort towards fixing bugs and improving the user experience. The\n  addition of new features may have a disruptive effect on other parts of the\n  program, due both to the introduction of new, untested source code or\n  resources and to interactions with other features; thus, a feature freeze\n  helps improve the program's stability.\n\n* A 'code freeze', in which no changes whatsoever are permitted to a portion or\n  the entirety of the program's source code. Particularly in large software\n  systems, any change to the source code may have unintended consequences,\n  potentially introducing new bugs; thus, a code freeze helps ensure that a\n  portion of the program that is known to work correctly will continue to do so.\n  Code freezes are often employed in the final stages of development, when a\n  particular release or iteration is being tested, but may also be used to\n  prevent changes to one portion of a program while another is undergoing\n  development.\n\nIn development environments using revision control, the use of branching can\nalleviate delays in development caused by freezes. For example, a project may\nhave a \"stable\" branch from which new versions of the software are released,\nand a separate \"development\" branch in which the developers add new code. The\neffect of a freeze is then to prevent promotion of some or all changes from the\ndevelopment branch to the stable branch. In other words, the freeze applies\nonly to the stable branch, and developers can continue their work on the\ndevelopment branch.\n","linknr":103,"url":"Freeze_(software_engineering)","recorded":1362893058,"links":18,"instances":["software"],"pdf":[],"categories":["Software project management"],"headings":["See also"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/8/82/Software_spanner.png/40px-Software_spanner.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["branching","software"]],"members":["branching"],"related":["Software_engineering","Source_code","Software_release","Iterative_and_incremental_development","Technology_roadmap","Computer_bug","Software_bug","Software_testing","Regression_bug","Revision_control","Branching_(software)","Software_release_life_cycle","Feature_complete"]}