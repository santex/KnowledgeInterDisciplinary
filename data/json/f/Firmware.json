{"cursor":"10117","size":15,"audio":[],"currentlang":"en","article":"\n\nIn electronic systems and computing, 'firmware' is the combination of persistent\nmemory and program code and data stored in it. Typical examples of\ndevices containing firmware are embedded systems (such as traffic lights,\nconsumer appliances, and digital watches), computers, computer peripherals,\nmobile phones, and digital cameras. The firmware contained in these devices\nprovides the control program for the device. Firmware is held in non-volatile\nmemory devices such as ROM, EPROM, or flash memory. Changing the firmware of a\ndevice may rarely or never be done during its economic lifetime; some firmware\nmemory devices are permanently installed and cannot be changed after\nmanufacture. Common reasons for updating firmware include fixing bugs or adding\nfeatures to the device. This may require physically changing ROM integrated\ncircuits, or reprogramming flash memory with a special procedure. Firmware such\nas the ROM BIOS of a personal computer may contain only elementary basic\nfunctions of a device and may only provide services to higher-level software.\nFirmware such as the program of an embedded system may be the only program that\nwill run on the system and provide all of its functions.\n\nBefore integrated circuits, other firmware devices included a discrete\nsemiconductor diode matrix. The Apollo guidance computer had firmware consisting\nof a specially manufactured core memory plane, called \"core rope memory\", where\ndata was stored by physically threading wires through (1) or around (0) the core\nstoring each data bit.\n","linknr":274,"url":"Firmware","recorded":1362671085,"links":57,"instances":["video_game","video_games","computing","amiga","electronics_","computer_security","computing"],"pdf":[],"categories":["Embedded systems","Firmware|*"],"headings":["Origin of the term","Personal computers","Consumer products","Automobiles","Examples","Firmware hacking","See also","References"],"image":["//upload.wikimedia.org/wikipedia/commons/7/7f/Television_remote_control.jpg","//upload.wikimedia.org/wikipedia/commons/thumb/3/3d/ROM_BIOS.jpg/220px-ROM_BIOS.jpg","//bits.wikimedia.org/static-1.21wmf9/skins/common/images/magnify-clip.png","//bits.wikimedia.org/static-1.21wmf9/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf9/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["brick","electronics_"],["arcs","computing"],["kickstart","amiga"],["kernel","computing"],["homebrew","video_games"],["doom","video_game"],["exploit","computer_security"]],"members":["doom","homebrew","kernel","kickstart","brick","exploit","arcs"],"related":["Electronic_system","Computing","Embedded_systems","Mobile_phone","Digital_camera","Non-volatile","Read-only_memory","EPROM","Flash_memory","ROM_BIOS","Semiconductor_diode","Diode_matrix","Apollo_guidance_computer","Core_memory","Core_rope_memory","Control_store","Microcode","Instruction_set","Central_processing_unit","BIOS","Booting","Computer_data_storage","Brick_(electronics)_","Baby_AT","Motherboard","Operating_system","USB_flash_drive","Portable_music_player","Iriver","Vorbis","Mobile_phone","Firmware_Over_The_Air","Microcontroller","Digital_signal_processor","Automobile","Transmission_control_unit","Washing_machine","TV","EPROM","BIOS","Itanium","Mac_OS_X","Extensible_Firmware_Interface","Open_Firmware","Sun_Microsystems","Apple_Inc.","Genesi","ARCS_(computing)","Silicon_Graphics","Kickstart_(Amiga)","Amiga","Power-on_self-test","Plug_and_Play","Autoconfig","Kernel_(computing)","Run-Time_Abstraction_Services","IBM","Common_Firmware_Environment","Rockbox","Digital_audio_player","CHDK","Canon_digital_camera","EXPEED","Nikon_DSLR","OpenWrt","Wireless_router","ADSL","TI-AR7","Adam2","Bootloader","List_of_wireless_router_firmware_projects","DVD_region_code","Samsung","LWN.net","Homebrew_(video_games)","Doom_(video_game)","IPod","Free_software","Open_source","Exploit_(computer_security)","Unsigned_code","Malware","Malcon","Hacker_convention","ROM_image","UEFI","Coreboot","Microcode","Binary_blob","Bootloader"]}