{"cursor":"3957","size":15,"audio":[],"currentlang":"en","article":"\n\n\nModes are the permissions given to users, groups and/or the 'other' class to\naccess files.\n\nModes are shown when listing files in long format, or, if Access Control Lists\nare in use, using getfacl.\n\nModes can be changed with chmod (for older Unix permissions) or with setfacl\n(for Access Control Lists).\n\nFor traditional Unix permissions, the symbolic mode is composed of three\ncomponents, which are combined to form a single string of text:\n\n $ chmod [references][operator][modes] file1 ...\n\nThe references (or classes) are used to distinguish the users to whom the\npermissions apply. If no references are specified it defaults to \"all\". They are\nrepresented by one or more of the following letters: {|class=\"wikitable\"\n|-\n! Reference !! Class !! Description\n|- u || user || the owner of the file - g || group || users\n|who are members of the file's group - o || others || users who are not\n|the owner of the file or members of the group - a || all || all three\n|of the above, is the same as ugo }\n\nThe chmod program uses an operator to specify how the modes of a file\nshould be adjusted. The following operators are accepted: {|class=\"wikitable\"\n|-\n! Operator !! Description\n|- + ||adds the specified modes to the specified classes - -\n|||removes the specified modes from the specified classes - = ||the\n|modes specified are to be made the exact modes for the specified classes }\n\nThe modes indicate which permissions are to be granted or taken away from the\nspecified classes. There are three basic modes which correspond to the basic\npermissions: {|class=\"wikitable\"\n|-\n! Mode !! Name !! Description\n|- r || read ||'r'ead a file or list a directory's contents -\n| w || write ||'w'rite to a file or directory - x || execute\n|||e'x'ecute a file or recurse a directory tree - X || special execute\n||| which is not a permission in itself but rather can be used instead of x. It\n|applies execute permissions to directories regardless of their current\n|permissions and applies execute permissions to a file which already has at\n|least 1 execute permission bit already set (either user, group or other). It is\n|only really useful when used with '+' and usually in combination with the -R\n|option for giving group or other access to a big directory tree without setting\n|execute permission on normal files (such as text files), which would normally\n|happen if you just used \"chmod -R a+rx .\", whereas with 'X' you can do \"chmod\n|-R a+rX .\" instead - s || setuid/gid || details in Special modes\n|section - t || sticky || details in Special modes section }\n\nThe combination of these three components produces a string that is understood\nby the chmod command. Multiple changes can be specified by separating\nmultiple symbolic modes with commas.\n","linknr":81,"url":"Modes_(Unix)","recorded":1362552216,"links":12,"instances":[],"pdf":[],"categories":["Unix"],"headings":["String mode examples"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[],"members":[],"related":["Ls","Chmod"]}