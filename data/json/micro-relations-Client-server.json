{"cursor":"3786","size":15,"audio":[],"currentlang":"en","article":"\n of clients communicating with a server via the Internet. Both the clients and\n the server are nodes (communication points) on the network. The arrangement of\n the nodes in a network is called the [[network topology]].]] The 'clientâserver\n model' is an approach to computer network programming developed at Xerox PARC\n during the 1970s. It is now prevalent in computer networks. Email, the World\n Wide Web, and network printing all apply the clientâserver model.\n\nThe model assigns one of two roles to the computers in a network: Client or\nserver. A server is a computer system that selectively shares its resources; a\nclient is a computer or computer program that initiates contact with a server in\norder to make use of a resource. Data, CPUs, printers, and data storage devices\nare some examples of resources.\n\nThis sharing of computer resources is called [[time-sharing]], because it allows\nmultiple people to use a computer (in this case, the server) at the same time.\nBecause a computer does a limited amount of work at any moment, a time-sharing\nsystem must quickly prioritize its tasks to accommodate the clients.\n\nClients and servers exchange messages in a request-response messaging pattern:\nThe client sends a request, and the server returns a response. To communicate,\nthe computers must have a common language, and they must follow rules so that\nboth the client and the server know what to expect. The language and rules of\ncommunication are defined in a communications protocol. All client-server\nprotocols operate in the application layer.\n\nWhether a computer is a client, a server, or both, it can serve multiple\nfunctions. For example, a single computer can run web server and file server\nsoftware at the same time to serve different data to clients making different\nkinds of requests. Client software can also communicate with server software on\nthe same computer. The X Window System is one practical example.\nCommunication between servers, such as to synchronize data, is sometimes called\n[[inter-server]] or server-to-server communication.\n","linknr":174,"url":"Client-server","recorded":1362891309,"links":50,"instances":["computer_science","computing","computing","engineering","computing","computing","networking"],"pdf":[],"categories":["Application layer protocols|","Clients (computing)|","Servers (computing)|","Network architecture"],"headings":["Comparison with peer-to-peer architecture","See also","Notes"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Client-server-model.svg/220px-Client-server-model.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["node","networking"],["client","computing"],["server","computing"],["resource","computer_science"],["data","computing"],["printer","computing"],["node","networking"],["redundancy","engineering"]],"members":["resource","client","printer","redundancy","data","server","node"],"related":["Internet","Node_(networking)","Computer_network","Computer_network_programming","Xerox_PARC","Computer_network","Email","World_Wide_Web","Network_printing","Computer","Computer_network","Client_(computing)","Server_(computing)","Resource_(computer_science)","Computer_program","Data_(computing)","CPU","Printer_(computing)","Data_storage_device","Computer_multitasking","Request-response","Messaging_pattern","Communications_protocol","Application_layer","Web_server","File_server","Software","X_Window_System","Centralized_system","Peer-to-peer","Decentralized_system","Node_(networking)","Redundancy_(engineering)","Personal_computer","Uptime","Observer_pattern","Pull_technology","Push_technology","Servent","Service-oriented_architecture","Standalone_server","Thin_client"]}