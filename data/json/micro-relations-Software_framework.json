{"cursor":"10798","size":15,"audio":[],"currentlang":"en","article":"\nIn computer programming, a 'software framework' is an abstraction in which\nsoftware providing generic functionality can be selectively changed by\nadditional user written code, thus providing application specific software. A\nsoftware framework is a universal, reusable software platform used to develop\napplications, products and solutions. Software frameworks include support\nprograms, compilers, code libraries, an application programming interface (API)\nand tool sets that bring together all the different components to enable\ndevelopment of a project or solution.\n\nFrameworks contain key distinguishing features that separate them from normal\nlibraries:\n# '[[inversion of control]]' - In a framework, unlike in libraries or normal\n# user applications, the overall program's flow of control is not dictated by\n# the caller, but by the framework. 'default behavior' - A framework\n# has a default behavior. This default behavior must actually be some useful\n# behavior and not a series of no-ops. '[[extensibility]]' - A framework can be\n# extended by the user usually by selective overriding or specialized by user\n# code to provide specific functionality. 'non-modifiable framework code' - The\n# framework code, in general, is not allowed to be modified, excepting\n# extensibility. Users can extend the framework, but not modify its code.\n","linknr":202,"url":"Software_framework","recorded":1362559139,"links":44,"instances":["computer_science","computer_science","computer_science","computer_science","computer_science","computer_science"],"pdf":["http://www.riehle.org/computer-science/research/dissertation/diss-a4.pdf","http://www.riehle.org/computer-science/research/dissertation/diss-a4.pdf"],"categories":["Object-oriented programming","Software architecture","Software design patterns"],"headings":["Rationale","Examples","Architecture","See also","References","External links"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["abstraction","computer_science"],["class","computer_science#concrete_classes"],["class","computer_science"],["instance","computer_science"],["subclass","computer_science"],["superclass","computer_science"],["class","computer_science"],["design_pattern","computer_science"]],"members":["abstraction","design_pattern","subclass","superclass","class","instance"],"related":["Computer_programming","Abstraction_(computer_science)","Software_platform","Application_programming_interface","Control_flow","NOP","Web_application_framework","State_management","Code_bloat","Elegance","CAD","Compiler","Programming_language","Decision_support_systems","Multimedia_framework","Web_application_framework","Middleware","Cactus_Framework","Object-oriented_programming","Abstract_class","Class_(computer_science)","Instance_(computer_science)","Object_composition","Subclass_(computer_science)","Hollywood_Principle","Superclass_(computer_science)","Abstract_method","Application_framework","Class_(computer_science)","Design_pattern_(computer_science)","Don't_repeat_yourself","Enterprise_Architecture_framework","Implicit_invocation","Programming_paradigm","Web_application_framework"]}