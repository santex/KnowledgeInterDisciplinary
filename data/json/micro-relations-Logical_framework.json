{"cursor":"7234","size":15,"audio":[],"currentlang":"en","article":"In logic, a 'logical framework' provides a means to define (or present) a logic\nas a signature in a higher-order type theory in such a way that provability of a\nformula in the original logic reduces to a type inhabitation problem in the\nframework type theory.\nThis approach has been used successfully for (interactive) automated theorem\nproving. The first logical framework was Automath, however the name of the idea\ncomes from the more widely known Edinburgh Logical Framework, 'LF'. Several more\nrecent proof tools like Isabelle (theorem prover) are based on this idea. Unlike a direct embedding, the logical framework approach\nallows many logics to be embedded in the same type system.\n\nA logical framework is based on a general treatment of syntax, rules and proofs\nby means of a dependently typed lambda calculus. Syntax is treated in a style\nsimilar to, but more general than Per Martin-LÃ¶f's system of arities.\n\nTo describe a logical framework, one must provide the following:\n\n# A characterization of the class of object-logics to be represented; An\n# appropriate meta-language; A characterization of the mechanism by which object-\n# logics are represented.\n\nThis is summarized by:\n\nâFramework = Language + Representationâ.\n","linknr":146,"url":"Logical_framework","recorded":1362559235,"links":13,"instances":["logic","mathematical_logic","computer_scientist","theorem_prover"],"pdf":["http://www.cs.cmu.edu/~fp/papers/mdorf01.pdf","http://www.cs.cmu.edu/~fp/papers/mdorf01.pdf"],"categories":["Logic in computer science","Type theory","Proof assistants","Dependently typed programming"],"headings":["LF","References","See also","Further reading","External links"],"image":["//upload.wikimedia.org/math/d/8/a/d8a56734e6d562e13c4bdc213e273842.png","//upload.wikimedia.org/math/d/8/a/d8a56734e6d562e13c4bdc213e273842.png","//upload.wikimedia.org/math/8/2/9/8290e80b20ed99a84ba1a638695b74c6.png","//upload.wikimedia.org/math/4/3/9/439b6dd093b2008af66f1a8c73f024e4.png","//upload.wikimedia.org/math/a/5/9/a5968d97f5f88f01dd80d099360d7e13.png","//upload.wikimedia.org/math/b/2/6/b261a4aec0cc7e7b38aabd9876bffdf6.png","//upload.wikimedia.org/math/e/0/5/e05a30d96800384dd38b22851322a6b5.png","//upload.wikimedia.org/math/d/8/a/d8a56734e6d562e13c4bdc213e273842.png","//upload.wikimedia.org/math/d/8/a/d8a56734e6d562e13c4bdc213e273842.png","//upload.wikimedia.org/math/d/8/a/d8a56734e6d562e13c4bdc213e273842.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["isabelle","theorem_prover"],["decidability","logic"],["decidability","logic"],["judgement","mathematical_logic"],["robert_harper","computer_scientist"]],"members":["decidability","judgement","robert_harper","isabelle"],"related":["Logic","Type_theory","Provability","Type_inhabitation","Automated_theorem_proving","Automath","Edinburgh_Logical_Framework","Isabelle_(theorem_prover)","Dependent_type_theory","Per_Martin-Löf","ΛΠ-calculus","Propositions_as_types_principle","Impredicativity_","Strongly_normalizing","Church-Rosser","Decidability_(logic)","Type_inference","Decidability_(logic)","Per_Martin-Löf","Kant","Judgement_(mathematical_logic)","Logical_system","Twelf","Carnegie_Mellon_University","Meta-logic","Logical_framework_approach","Robert_Harper_(computer_scientist)","Gordon_Plotkin","Nordic_Journal_of_Philosophical_Logic","Frank_Pfenning"]}