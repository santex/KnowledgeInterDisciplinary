{"cursor":"8522","size":15,"audio":[],"currentlang":"en","article":"\nA 'comparison sort' is a type of sorting algorithm that only reads the list\nelements through a single abstract comparison operation (often a \"less than or\nequal to\" operator) that determines which of two elements should occur first in\nthe final sorted list. The only requirement is that the operator obey two of the\nproperties of a total order:\n# if a â¤ b and b â¤ c then a â¤ c (transitivity) for all a and b, either a â¤ b or\n# b â¤ a (totalness or trichotomy).\n\nIt is possible that both a â¤ b and b â¤ a; in this case either may come first in\nthe sorted list. In a stable sort, the input order determines the sorted order\nin this case.\n\nA metaphor for thinking about comparison sorts is that someone has a set of\nunlabelled weights and a balance scale. Their goal is to line up the weights\nin order by their weight without any information except that obtained by\nplacing two weights on the scale and seeing which one is heavier (or if they\nweigh the same).\n","linknr":208,"url":"Comparison_sort","recorded":1362671214,"links":19,"instances":["mathematics"],"pdf":[],"categories":["Sorting algorithms"],"headings":["Examples","Performance limits and advantages of different sorting techniques","Number of comparisons required to sort a list","Notes","References"],"image":["//upload.wikimedia.org/wikipedia/commons/thumb/1/17/Balance_%C3%A0_tabac_1850.JPG/300px-Balance_%C3%A0_tabac_1850.JPG","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Sorting_quicksort_anim.gif/220px-Sorting_quicksort_anim.gif","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/math/a/a/0/aa0bfa62652bb31e73aaef684aa1fb51.png","//upload.wikimedia.org/math/7/b/8/7b8b965ad4bca0e41ab51de7b31363a1.png","//upload.wikimedia.org/math/f/e/9/fe9d7e496a2349e28d5675d20f4c6005.png","//upload.wikimedia.org/math/e/5/2/e522fac4071f84944d3d89730b99860b.png","//upload.wikimedia.org/math/9/e/6/9e6d43cfa222ad6876239c40506876ec.png","//upload.wikimedia.org/math/e/9/7/e97f47e764ff18290d443522746d22b3.png","//upload.wikimedia.org/math/2/b/c/2bc8c1ae6f722338403dcecc7dd9828f.png","//upload.wikimedia.org/math/1/8/c/18c52814fe2230f1fefb396a76cf6d2b.png","//upload.wikimedia.org/wikipedia/commons/thumb/d/d8/OEISicon_light.svg/11px-OEISicon_light.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["trichotomy","mathematics"],["merge_insertion","ford-johnson_sort"]],"members":["merge_insertion","trichotomy"],"related":["Sorting_algorithm","Total_order","Trichotomy_(mathematics)","Balance_scale","Quick_sort","Heap_sort","Merge_sort","Intro_sort","Insertion_sort","Selection_sort","Bubble_sort","Odd-even_sort","Cocktail_sort","Cycle_sort","Merge_insertion_(Ford-Johnson)_sort","Smoothsort","Timsort","Integer_sorting","Radix_sort","Counting_sort","Bucket_sort","Big-O_notation","Asymptotically_optimal","Big-O_notation","Tuple","Lexicographic_order","Balanced_ternary","Asymptotic_complexity","Factorial","Stirling's_approximation","Information_theory","Shannon_entropy","Donald_Knuth","Thomas_H._Cormen","Charles_E._Leiserson","Ronald_L._Rivest","Clifford_Stein"]}