{"cursor":"20479","size":15,"audio":[],"currentlang":"en","article":"\n\n\n In\nsystems programming, an 'interrupt' is a signal to the processor emitted by\nhardware or software indicating an event that needs immediate attention. An\ninterrupt alerts the processor to a high-priority condition requiring the\ninterruption of the current code the processor is executing, the current\n[[thread (computing)|thread]]. The processor responds by suspending its current\nactivities, saving its state, and executing a small program called an\n[[interrupt handler]] (or interrupt service routine, ISR) to deal with the\nevent. This interruption is temporary, and after the interrupt handler finishes,\nthe processor resumes execution of the previous thread. There are two types of\ninterrupts:\n\nA 'hardware interrupt' is an electronic alerting signal sent to the processor\nfrom an external device, either a part of the computer itself such as a disk\ncontroller or an external peripheral. For example, pressing a key on the\nkeyboard or moving the mouse triggers hardware interrupts that cause the\nprocessor to read the keystroke or mouse position. Unlike the software type\n(below), hardware interrupts are asynchronous and can occur in the middle of\ninstruction execution, requiring additional care in programming. The act of\ninitiating a hardware interrupt is referred to as an interrupt request (IRQ).\n\nA 'software interrupt' is caused either by an exceptional condition in the\nprocessor itself, or a special instruction in the instruction set which causes\nan interrupt when it is executed. The former is often called a trap or\n[[exception handling|exception]] and is used for errors or events occurring\nduring program execution that are exceptional enough that they cannot be handled\nwithin the program itself. For example, if the processor's arithmetic logic unit\nis commanded to divide a number by zero, this impossible demand will cause a divide-by-\nzero exception, perhaps causing the computer to abandon the calculation or\ndisplay an error message. Software interrupt instructions function similarly to\nsubroutine calls and are used for a variety of purposes, such as to request\nservices from low level system software such as device drivers. For example,\ncomputers often use software interrupt instructions to communicate with the disk\ncontroller to request data be read or written to the disk.\n\nEach interrupt has its own interrupt handler. The number of hardware interrupts\nis limited by the number of interrupt request (IRQ) lines to the processor, but\nthere may be hundreds of different software interrupts.\n\nInterrupts are a commonly used technique for computer multitasking, especially\nin real-time computing. Such a system is said to be interrupt-driven.\n","linknr":325,"url":"Interrupt","recorded":1362684905,"links":44,"instances":["computing","x86_instruction","computer_security","computer_science","computer_science","computing","computer_science","computing","computing"],"pdf":[],"categories":["Interrupts|"],"headings":["Overview","Types of Interrupts","Difficulty with sharing interrupt lines","Performance issues","Typical uses","See also","References","External links"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Interrupt_Process.PNG/300px-Interrupt_Process.PNG","//bits.wikimedia.org/static-1.21wmf9/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/8/8d/Nuvola_apps_ksim.png/28px-Nuvola_apps_ksim.png","//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/37px-Wiktionary-logo-en.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["state","computer_science"],["keyboard","computing"],["mouse","computing"],["instruction","computer_science"],["polling","computer_science"],["ring","computer_security"],["polling","computer_science"],["scheduling","computing"],["process","computing"],["int","x86_instruction"]],"members":["scheduling","int","ring","polling","instruction","process","state","mouse","keyboard"],"related":["Systems_programming","Central_processing_unit","State_(computer_science)","Disk_controller","Peripheral","Keyboard_(computing)","Mouse_(computing)","Asynchronous_communication","Interrupt_request","Instruction_(computer_science)","Instruction_set","Arithmetic_logic_unit","Subroutine_call","System_software","Device_driver","Disk_controller","Computer_multitasking","Real-time_computing","Polling_(computer_science)","Programmable_Interrupt_Controller","Multiplexing","Memory_controller","Address_space","IRQ","Interrupt_mask_register","Watchdog_timer","Multiprocessor","System_call","Ring_(computer_security)","Electrical_interference","X86","Memory_barrier","Program_counter","Interrupt_storm","Interrupt_request","Z80","Pull-up_resistor","Peripheral_Component_Interconnect","PCI_Express","Signal_edge","Polled_I/O","Open_collector","Pull_cord","Industry_Standard_Architecture","Parallel_port","Interrupt","Computer_bus","PCI_Express","Message_Signaled_Interrupts","Push_button","Computer_systems","Software","Computer_hardware","Hard_disk_drive","Computer_network","Encrypt","Misnomer","Polling_(computer_science)","Hardware_register","CPU","Message_Signaled_Interrupts","PCI_Express","Industry_Standard_Architecture","Hardware_logic","Interrupt_latency","Livelock","Exception_handling","UART","Ethernet","Timer","Scheduling_(computing)","Process_(computing)","Power_line_frequency","Atomic_clock","Typeahead","Keystrokes","Advanced_Programmable_Interrupt_Controller","BIOS_interrupt_call","Event-driven_programming","INT_(x86_instruction)","Interrupt_handler","Interrupt_latency","Interrupts_in_65xx_processors","Ralf_Brown's_Interrupt_List"]}