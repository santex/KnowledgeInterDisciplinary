{"cursor":"61005","size":15,"audio":[],"currentlang":"en","article":"\n\n\n\nA 'Turing machine' is a hypothetical device that manipulates symbols on a strip\nof tape according to a table of rules. Despite its simplicity, a Turing machine\ncan be adapted to simulate the logic of any computer algorithm, and is\nparticularly useful in explaining the functions of a CPU inside a computer.\n\nThe \"Turing\" machine was invented in 1936 by Alan Turing The idea came to\nhim in mid-1935 (perhaps, see more in the History section) after a question\nposed by M. H. A. Newman in his lectures: \"Was there a definite method, or as\nNewman put it, a mechanical process which could be applied to a mathematical\nstatement, and which would come up with the answer as to whether it was\nprovable\" (Hodges 1983:93). Turing submitted his paper on 31 May 1936 to the\nLondon Mathematical Society for its Proceedings (cf Hodges 1983:112), but it was\npublished in early 1937 and offprints were available in February 1937 (cf Hodges\n1983:129). who called it an \"a-machine\" (automatic machine). The Turing\nmachine is not intended as practical computing technology, but rather as a\nhypothetical device representing a computing machine. Turing machines help\ncomputer scientists understand the limits of mechanical computation.\n\nTuring gave a succinct definition of the experiment in his 1948 essay,\n\"Intelligent Machinery\". Referring to his 1936 publication, Turing wrote that\nthe Turing machine, here called a Logical Computing Machine, consisted of:\n\n ...an unlimited memory capacity obtained in the form of an infinite\ntape marked out into squares, on each of which a symbol could be printed. At any\nmoment there is one symbol in the machine; it is called the scanned symbol. The\nmachine can alter the scanned symbol and its behavior is in part determined by\nthat symbol, but the symbols on the tape elsewhere do not affect the behavior of\nthe machine. However, the tape can be moved back and forth through the machine,\nthis being one of the elementary operations of the machine. Any symbol on the\ntape may therefore eventually have an innings. See the definition of \"\" on\nWiktionary (Turing 1948, p. 61) \n\nA Turing machine that is able to simulate any other Turing machine is called a\nuniversal Turing machine ('UTM', or simply a 'universal machine'). A more\nmathematically oriented definition with a similar \"universal\" nature was\nintroduced by Alonzo Church, whose work on lambda calculus intertwined with\nTuring's in a formal theory of computation known as the ChurchâTuring thesis.\nThe thesis states that Turing machines indeed capture the informal notion of\neffective method in logic and mathematics, and provide a precise definition of\nan algorithm or \"mechanical procedure\".\n\nStudying their abstract properties yield many insights into computer science and\ncomplexity theory.\n","linknr":533,"url":"Turing_machines","recorded":1362374642,"links":77,"instances":["computer_science","academic","computing","computation"],"pdf":["http://research.microsoft.com/en-us/um/people/gurevich/Opera/188.pdf","http://research.microsoft.com/en-us/um/people/gurevich/Opera/188.pdf","http://www.wolframscience.com/prizes/tm23/TM23Proof.pdf"],"categories":["1937 in computer science","Turing machine","Educational abstract machines","Theoretical computer science","Alan Turing","Models of computation","Formal methods","Computability theory","English inventions"],"headings":["Informal description","Formal definition","Additional details required to visualize or implement Turing machines","Models equivalent to the Turing machine model","Choice c-machines, Oracle o-machines","Universal Turing machines","Comparison with real machines","History","See also","Notes","References","External links"],"image":["//upload.wikimedia.org/wikipedia/commons/thumb/3/3d/Maquina.png/220px-Maquina.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/en/thumb/0/09/Turing_machine_2a.svg/300px-Turing_machine_2a.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Turing_machine_2b.svg/300px-Turing_machine_2b.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/math/4/1/6/4162f55252213c9c8549b771fe5f9aa4.png","//upload.wikimedia.org/math/f/0/9/f09564c9ca56850d4cd6b3319e541aee.png","//upload.wikimedia.org/math/1/6/2/162d4c413f99ae2763b1ced17ed1a14b.png","//upload.wikimedia.org/math/a/e/e/aee1e6755ef0919d2408c5409e9ddd2e.png","//upload.wikimedia.org/math/0/2/d/02d00dcbd6e20d0c296f96f4621372bf.png","//upload.wikimedia.org/math/9/8/5/985a2a128ebf9e30b78e9273a1ada4d5.png","//upload.wikimedia.org/math/2/e/f/2ef3b9c9ae290bb1868e0a3e1ab6dfdd.png","//upload.wikimedia.org/math/1/8/f/18f2786ab321eb7cd85528515a4b1ff8.png","//upload.wikimedia.org/math/8/c/9/8c9ccc2b9eec7723ec82a63548888e01.png","//upload.wikimedia.org/math/4/c/7/4c768aaeff22acb345e16f9cc2020d73.png","//upload.wikimedia.org/math/f/6/d/f6d5eef5ee5e51fc839bb54201c62e3b.png","//upload.wikimedia.org/math/9/8/1/98140327d88ca4ee48e4d3c89c67df67.png","//upload.wikimedia.org/math/3/c/6/3c656f176d9c18800c1703283d72e87b.png","//upload.wikimedia.org/math/2/e/a/2eaba7cf1c262289ad79af2c4db3461b.png","//upload.wikimedia.org/math/c/5/7/c57a72cbff4bba1f7b357d29ecca17e6.png","//upload.wikimedia.org/math/f/2/5/f251c223246e30ce25880246c0d12bb7.png","//upload.wikimedia.org/math/c/4/b/c4bcb8ee3f28d0fe745e258e8f0beec5.png","//upload.wikimedia.org/wikipedia/commons/thumb/4/4b/State_diagram_3_state_busy_beaver_2B.svg/500px-State_diagram_3_state_busy_beaver_2B.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/en/thumb/f/f9/State_diagram_3_state_busy_beaver_4_.JPG/500px-State_diagram_3_state_busy_beaver_4_.JPG","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Lego_Turing_Machine.jpg/220px-Lego_Turing_Machine.jpg","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["lifo","computing"],["hao_wang","academic"],["omega","computer_science"],["computability_theory","computation"],["hao_wang","academic"]],"members":["omega","hao_wang","lifo","computability_theory"],"related":["Computer","Algorithm","CPU","Alan_Turing","M._H._A._Newman","Wiktionary","Universal_Turing_machine","Alonzo_Church","Lambda_calculus","Computation","Church–Turing_thesis","Logic","Mathematics","Algorithm","Abstract_machine","Computer_science","Computational_complexity_theory","Entscheidungsproblem","Computer_storage","Tuple","Partial_function","Busy_beaver","Turing_machine_examples","Linear_bounded_automaton","Turing_machine_examples","Post–Turing_machine","Gödel_number","Finite_state_machine","Church–Turing_thesis","Pushdown_automaton","LIFO_(computing)","Turing_completeness","Multi-tape_Turing_machine","Multi-track_Turing_machine","Non-deterministic_Turing_machine","Read-only_right_moving_Turing_machines","Nondeterministic_finite_automaton","Deterministic_finite_automaton","NDFA_to_DFA_conversion_algorithm","Register_machine","Assembly_language","Programming_language","Nondeterministic_Turing_machine","Oracle_machine","Stored-program_computer","Computational_complexity","Logarithm","R._E._Stearns","Linear_bounded_automaton","Out_of_memory","Operating_system","Word_processor","Abstract_machine","Random_access_stored_program_machine","Universal_Turing_machine","Random_access_machine","Binary_search","Unbounded_nondeterminism","Alan_Turing","Robin_Gandy","Alan_Turing","Babbage","Analytical_Engine","Goto","Turing_computable","Percy_Ludgate","Leonardo_Torres_y_Quevedo","Maurice_d'Ocagne","Louis_Couffignal","Vannevar_Bush","Howard_Aiken","Hilbert's_problems","David_Hilbert","Diophantine_equation","First-order_logic","Entscheidungsproblem","Heinrich_Behmann","Kurt_Gödel","Alonzo_Church","Effective_calculability","Emil_Post","Stephen_Kleene","J._B._Rosser","Lambda-calculus","Recursion_theory","Church–Turing_thesis","King's_College_Cambridge","UK","M._H._A._Newman","Automatic_Computing_Engine","EDVAC","Turing's_Thesis","Konrad_Zuse","Howard_Aiken","George_Stibitz","World_War_II","Hao_Wang_(academic)","Marvin_Minsky","Post-Turing_machine","Martin_Davis","Electronic_computer","Counter_machine","Register_machine","Random_access_machine","Theory_of_computation","Computational_complexity_theory","Algorithm","Arithmetical_hierarchy","Bekenstein_bound","BlooP_and_FlooP","Busy_beaver","Chaitin_constant","Omega_(computer_science)","Church-Turing_thesis","Claude_Shannon","Conway's_Game_of_Life","Digital_infinity","Genetix","Halting_problem","Harvard_architecture","Langton's_ant","Turmite","Modified_Harvard_architecture","Probabilistic_Turing_machine","Quantum_Turing_machine","Turing_completeness","Computability_theory_(computation)","Turing_switch","Turing_machine_examples","Turing_tarpit","Von_Neumann_architecture","Jack_Copeland","Emil_Post","Martin_Davis","Turing's_proof","R._E._Stearns","JACM","Register_machine","Computable_function","Taylor_L._Booth","Stephen_Kleene","Zohar_Manna","Marvin_Minsky","Peter_van_Emde_Boas","Jan_van_Leeuwen","Stephen_Wolfram","Robin_Gandy","Rolf_Herken","Stephen_Hawking","Andrew_Hodges","Hao_Wang_(academic)","Charles_Petzold","Isaiah_Pinchas_Kantorovitz","Wolfram_Demonstrations_Project"]}