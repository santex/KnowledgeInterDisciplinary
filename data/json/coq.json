{"micrownet":["coq_au_vin","coquet","coquetry","coquette","coquettish","coquilla_nut","coquille","coquilles_saint-jacques"],"duck":["\n<a href=\"http://duckduckgo.com/Curry%E2%80%93Howard_correspondence\">Curry–Howard correspondence</a> - The Curry–Howard correspondence is the direct relationship between computer programs and proofs in programming language theory and proof theory.","\n<a href=\"http://duckduckgo.com/c/Educational_math_software\">Educational math software</a>","\n<a href=\"http://duckduckgo.com/Calculus_of_constructions\">Calculus of constructions</a> - The calculus of constructions is a significant type theory created by Thierry Coquand.","\n<a href=\"http://duckduckgo.com/Coenzyme_Q10\">Coenzyme Q10</a> - Coenzyme Q10, also known as ubiquinone, ubidecarenone, coenzyme Q, and abbreviated at times to CoQ10  CoQ, or Q10 is a 1,4-benzoquinone, where ...","\n<a href=\"http://duckduckgo.com/Intuitionistic_type_theory\">Intuitionistic type theory</a> - Intuitionistic type theory, or constructive type theory, or Martin-Löf type theory is a type theory and an alternative foundation of mathematics based on the principles of mathematic...","Coq","\n<a href=\"http://duckduckgo.com/c/Free_theorem_provers\">Free theorem provers</a>","https://i.duckduckgo.com/i/ea5c00be.png","\n<a href=\"http://duckduckgo.com/c/OCaml_software\">OCaml software</a>","\n<a href=\"http://duckduckgo.com/c/Programming_languages_created_in_the_20th_century\">Programming languages created in the 20th century</a>","\n<a href=\"http://duckduckgo.com/c/Functional_languages\">Functional languages</a>","In computer science, Coq is an interactive theorem prover.","ARRAY(0x7c04de0)"],"common":{"milestones":["<a target=\"_new\" href=\"http://en.wikinews.org/wiki/Aerosmith_sued_over_late_cancellation_of_gig_in_Maui,_Hawaii\" title=\"Aerosmith sued over late cancellation of gig in Maui, Hawaii\">Aerosmith sued over late cancellation of gig in Maui, Hawaii</a>","<a target=\"_new\" href=\"http://en.wikinews.org/wiki/Solar-powered_airplane_makes_first_international_flight\" title=\"Solar-powered airplane makes first international flight\">Solar-powered airplane makes first international flight</a>"],"image":[[],[]]},"Lists":[],"created":1373549864,"book":[],"micro-www":{"coq":["coq","Coquaternion",""]},"wiki":{"cat":["Large-scale mathematical formalization projects","Proof assistants","Free theorem provers","Dependently typed languages","Educational math software","OCaml software","Free software programmed in OCaml","Functional languages","Programming languages created in the 20th century"],"text":"\n{{Infobox programming language\n| name = Coq logo = paradigm = Functional year = 1984<ref>[http://coq.inria.fr/what-is-\n| coq]</ref> designer = developer = latest_release_version = 8.4\n| latest_release_date = latest_test_version = latest_test_date = typing =\n| static, strong implementations = dialects = influenced = Agda influenced_by =\n| ML and Standard ML license = LGPL 2.1 website = file ext = .v operating_system\n| = Cross-platform\n}}\n\n\n\nIn computer science, 'Coq' is an interactive theorem prover. It allows the\nexpression of mathematical assertions, mechanically checks proofs of these\nassertions, helps to find formal proofs, and extracts a certified program from\nthe constructive proof of its formal specification. Coq works within the theory\nof the calculus of inductive constructions, a derivative of the calculus of\nconstructions. Coq is not an automated theorem prover but includes automatic\ntheorem proving tactics and various decision procedures.\n\nCoq implements a dependently typed functional programming language.<ref>[http://coq.inria.fr/a-short-introduction-to-\ncoq A short introduction to Coq].</ref>\n\nIt is developed in France, in the PI.R2 team of the PPS laboratory,<ref>[http://www.pps.univ-paris-\ndiderot.fr/pi.r2/ PI.R2]</ref> jointly operated by INRIA, École Polytechnique,\nParis-Sud 11 University, Paris Diderot University and CNRS. There was also\nformerly a group at École Normale Supérieure de Lyon. The project manager of Coq\nis Hugo Herbelin. Coq is implemented in OCaml.\n\nThe word coq means \"rooster\" in French, and stems from a tradition of naming\nFrench research development tools with animal\nnames.<ref>http://flint.cs.yale.edu/cs430/coq/doc/faq.html#htoc4</ref> It is\nalso a reference to Thierry Coquand, who developed the aforementioned calculus\nof constructions along with Gérard Huet. Also, at first it was simply called\nCoc, the acronym of calculus of construction.\n","title":"coq","headings":["Four color theorem and ssreflect extension","Applications","See also","References","External links"]},"micro-relation":["2: Calculus_of_constructions","2: INRIA","2: Four_color_theorem","1: Static_typing","1: Strong_typing","1: ML_programming_language","1: LGPL","1: Cross-platform","1: Computer_science","1: Proof_assistant","1: Mathematics","1: Constructive_proof","1: Calculus_of_inductive_constructions","1: Automated_theorem_prover","1: Dependent_types","1: Functional_programming_language","1: France","1: Ãcole_Polytechnique","1: Paris-Sud_11_University","1: Paris_Diderot_University","1: CNRS","1: Ãcole_Normale_SupÃ©rieure_de_Lyon","1: OCaml","1: Rooster","1: French_language","1: Thierry_Coquand","1: GÃ©rard_Huet","1: Georges_Gonthier","1: Microsoft_Research","1: Cambridge","1: England","1: Benjamin_Werner","1: CeCill-B","1: FeitâThompson_theorem","1: CompCert","1: CurryâHoward_correspondence","1: Intuitionistic_type_theory","1: Benjamin_C._Pierce","1: Andrew_Appel","1: Institute_for_Advanced_Study","1: Andrej_Bauer"]}