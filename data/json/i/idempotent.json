{"micrownet":["idempotent"],"duck":["\n<a href=\"http://duckduckgo.com/c/Theoretical_computer_science\">Theoretical computer science</a>","\n<a href=\"http://duckduckgo.com/c/Mathematical_relations\">Mathematical relations</a>","\n<a href=\"http://duckduckgo.com/c/Closure_operators\">Closure operators</a>","\n<a href=\"http://duckduckgo.com/Closure_operator\">Closure operator</a> - In mathematics, a closure operator on a set S is a function cl: P(S) â†’ P(S) from the power set of S to itself which satisfies the following conditions for all...","Idempotence","\n<a href=\"http://duckduckgo.com/c/Binary_operations\">Binary operations</a>","\n<a href=\"http://duckduckgo.com/Pure_function\">Pure function</a>","\n<a href=\"http://duckduckgo.com/c/Abstract_algebra\">Abstract algebra</a>","\n<a href=\"http://duckduckgo.com/Nilpotent\">Nilpotent</a> - In mathematics, an element x of a ring R is called nilpotent if there exists some positive integer n such that xn&nbsp;=&nbsp;0.","Idempotence is the property of certain operations in mathematics and computer science, that can be applied multiple times without changing the result beyond the initial application.","\n<a href=\"http://duckduckgo.com/Referential_transparency_(computer_science)\">Referential transparency (computer science)</a> - Referential transparency and referential opaqueness are properties of parts of computer programs.","\n<a href=\"http://duckduckgo.com/Idempotent_matrix\">Idempotent matrix</a> - In algebra, an idempotent matrix is a matrix which, when multiplied by itself, yields itself.","\n<a href=\"http://duckduckgo.com/Fixed_point_(mathematics)\">Fixed point (mathematics)</a> - In mathematics, a fixed point of a function is a point that is mapped to itself by the function."],"common":{"milestones":[],"image":[[],[]]},"Lists":["List_of_matrices"],"created":1373504742,"book":[],"micro-www":{"idempotent":[""]},"wiki":{"cat":["Abstract algebra","Closure operators","Mathematical relations","Theoretical computer science","Binary operations"],"text":"\n'Idempotence' ( ) is the property of certain operations in mathematics and\ncomputer science, that can be applied multiple times without changing the result\nbeyond the initial application. The concept of idempotence arises in a number of\nplaces in abstract algebra (in particular, in the theory of projectors and\nclosure operators) and functional programming (in which it is connected to the\nproperty of referential transparency).\n\nThe term was introduced by Benjamin Peirce<ref>Polcino & Sehgal (2002), p.\n127.</ref> in the context of elements of algebras that remain invariant when\nraised to a positive integer power, and literally means \"(the quality of\nhaving) the same power\", from [[wikt:idem|idem]] + [[wikt:potence|potence]]\n(same + power).\n\nThere are several meanings of idempotence, depending on what the concept is\napplied to:\n\n*A unary operation (or function) is idempotent if, whenever it is applied twice\nto any value, it gives the same result as if it were applied once; i.e., . For\nexample, the absolute value: . *A binary operation is idempotent if, whenever it\nis applied to two equal values, it gives that value as the result. For example,\nthe operation giving the maximum value of two values is idempotent: . *Given a\nbinary operation, an idempotent element (or simply an idempotent) for the\noperation is a value for which the operation, when given that value for both of\nits operands, gives the value as the result. For example, the number 1 is an\nidempotent of multiplication: 1}}.\n","title":"Idempotence","headings":["Definitions","Common examples","Computer science meaning","Applied examples","See also","Notes","References","External links"]},"micro-relation":["3: Closure_operator","2: Computer_science","2: Functional_programming","2: Unary_operation","2: Absolute_value","2: Binary_operation","2: Logical_conjunction","2: Logical_disjunction","2: Boolean_algebra","2: Hypertext_Transfer_Protocol","1: Mathematics","1: Abstract_algebra","1: Benjamin_Peirce","1: Maximum","1: Multiplication","1: Identity_function","1: Constant_function","1: Vector_space","1: Integer_sequence","1: Identity_element","1: Function_composition","1: Real_number","1: Complex_number","1: Floor_function","1: Topological_space","1: Power_set","1: Kleene_star","1: Kleene_plus","1: Formal_grammar","1: Linear_algebra","1: Linear_transformation","1: Idempotent_semiring","1: Subroutine","1: Database","1: Hypertext_Transfer_Protocol#Safe_methods","1: Event_Stream_Processing","1: Load-store_architecture","1: Page_fault","1: Motorola_68000#Interrupts","1: Cfengine","1: Elevator","1: Idempotent_of_a_code","1: Nilpotent","1: Idempotent_matrix","1: List_of_matrices","1: Pure_function","1: Iterated_function","1: Biordered_set","1: FOLDOC"]}