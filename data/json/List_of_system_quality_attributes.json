{"cursor":"5940","size":15,"audio":[],"currentlang":"en","article":"__NOTOC__ In systems engineering and requirements engineering, a 'non-functional\nrequirement' is a requirement that specifies criteria that can be used to judge\nthe operation of a system, rather than specific behaviors. This should be\ncontrasted with functional requirements that define specific behavior or\nfunctions. The plan for implementing functional requirements is detailed in the\nsystem ''design''. The plan for implementing non-functional requirements is\ndetailed in the system ''architecture''.\n\nBroadly, functional requirements define what a system is supposed to do whereas\nnon-functional requirements define how a system is supposed to be. Functional\nrequirements are usually in the form of \"system shall do \", while\nnon-functional requirements are \"system shall be \".\n\nNon-functional requirements are often called 'qualities' of a system. Other\nterms for non-functional requirements are \"constraints\", \"quality attributes\",\n\"quality goals\", \"quality of service requirements\" and \"non-behavioral\nrequirements\". Informally these are sometimes called the \"ilities\",\nfrom attributes like stability and portability. Qualities, that is non-\nfunctional requirements, can be divided into two main categories:\n\n# Execution qualities, such as security and usability, which are observable at\n# run time. Evolution qualities, such as testability, maintainability,\n# extensibility and scalability, which are embodied in the static structure of\n# the software system.\n","linknr":157,"url":"List_of_system_quality_attributes","recorded":1362486360,"links":18,"instances":["regulation","computer","computing","computer_science","business","network"],"pdf":["http://www.idi.ntnu.no/grupper/su/fordypningsprosjekt-2005/eide-fordyp05.pdf","http://www.cs.umb.edu/~jxs/pub/scc.pdf"],"categories":["Software requirements"],"headings":["Examples","See also","References","External links"],"image":["//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["compliance","regulation"],["platform","computing"],["quality","business"],["resilience","network"],["robustness","computer_science"],["serviceability","computer"]],"members":["compliance","serviceability","platform","robustness","quality","resilience"],"related":["Systems_engineering","Requirements_engineering","Requirement","Functional_requirements","Systems_design","Systems_architecture","Software_testability","Accessibility","Availability","Service_level_agreement","Backup","Certification","Compliance_(regulation)","Configuration_management","Documentation","Disaster_recovery","Environmental_protection","Escrow","Extensibility","Failure_management","Fault_tolerance","Software_license_agreement","Interoperability","Maintainability","Modifiability","Network_topology","Open_source","Operability","Computer_performance","Performance_engineering","Platform_(computing)","Price","Privacy","Software_portability","Quality_(business)","Efficacy","Recovery","Mean_time_to_recovery","Reliability_engineering","Mean_time_between_failures","Resilience_(network)","Robustness_(computer_science)","Safety","Factor_of_safety","Scalability","Security","Backward_compatibility","Stability_Model","Serviceability_(computer)","Software_testability","Usability","ISO/IEC_9126","Requirements_analysis","Functional_requirements","Usability_requirements","Non-Functional_Requirements_framework","URPS"]}