{"cursor":"5446","size":15,"audio":[],"currentlang":"en","article":"\nIn computer science, a 'value' is an expression which cannot be evaluated any\nfurther (a normal form). The members of a type are the values of that type. For\nexample, the expression \"1 + 2\" is not a value as it can be reduced to the\nexpression \"3\". This expression cannot be reduced any further (and is a member\nof the type [[natural number|Nat]]) and therefore is a value.\n\nThe \"value of a variable\" is given by the corresponding mapping in the\nenvironment. In languages with assignable variables it becomes necessary to\ndistinguish between the R-value (or contents) and the L-value (or location) of\na variable.\n\nIn declarative (high-level) languages, values have to be referentially\ntransparent. This means that the resulting value is independent of the location\nin which a (sub-)expression needed to compute the value is stored. Only the\ncontents of the location (the bits, whether they are 1 or 0) and their\ninterpretation are significant. __NOTOC__\n","linknr":136,"url":"Value_(computer_science)","recorded":1362560522,"links":24,"instances":["type_theory","abstract_rewriting","computer_science","computer_science","computer_science","mathematics","computer_science"],"pdf":[],"categories":["Computer data","Programming language concepts","Type theory"],"headings":["Assignment: l-values and r-values","In assembly language","Notes","References","External links"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["expression","computer_science"],["evaluation","computer_science"],["normal_form","abstract_rewriting"],["type","computer_science"],["reduction","mathematics"],["environment","type_theory"],["referential_transparency","computer_science"]],"members":["environment","normal_form","expression","referential_transparency","type","reduction","evaluation"],"related":["Computer_science","Expression_(computer_science)","Evaluation_(computer_science)","Normal_form_(abstract_rewriting)","Type_(computer_science)","Reduction_(mathematics)","Environment_(type_theory)","Assignable_variable","Declarative_programming","Referential_transparency_(computer_science)","Memory_address","C++11","Combined_Programming_Language","ASCII","Decimal","Hexadecimal","Octal","Binary_code","Byte_order"]}