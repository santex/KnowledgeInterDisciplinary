{"cursor":"8995","size":15,"audio":[],"currentlang":"en","article":"\nIn computer science, a 'collection' or 'container' is a grouping of some\nvariable number of data items (possibly zero) that have some shared significance\nto the problem being solved and need to be operated upon together in some\ncontrolled fashion. Generally, the data items will be of the same type or, in\nlanguages supporting inheritance, derived from some common ancestor type. A\ncollection is a concept applicable to abstract data types, and does not\nprescribe a specific implementation as a concrete data structure, though often\nthere is a conventional choice; see container (type theory) for type theory\ndiscussion.\n\nSome different kinds of collections are lists, sets, bags (or multisets), trees\nand graphs. An enumerated type may be either a list or a set.\n\nA fixed-size table (or array) is usually not considered a collection because it\nholds a fixed number of items, although tables/arrays commonly play a role in\nthe implementation of collections. Variable-sized arrays are generally\nconsidered collections, and fixed-size arrays may likewise considered a\ncollection, albeit with limitations.\n","linknr":210,"url":"Collection_(abstract_data_type)","recorded":1362671600,"links":24,"instances":["data_structure","data_structure","abstract_data_type","data_structure","computing","abstract_data_type","data_structure","data_structure","abstract_data_type","computer_science"],"pdf":[],"categories":["Abstract data types","Data structures"],"headings":["Linear collections","Associative collections","Graphs","Abstract concept vs. implementation","Implementations","External links"],"image":["//upload.wikimedia.org/wikipedia/commons/thumb/5/52/Merge-arrows.svg/50px-Merge-arrows.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["container","type_theory"],["list","abstract_data_type"],["set","computer_science"],["tree","data_structure"],["graph","data_structure"],["list","abstract_data_type"],["stack","abstract_data_type"],["queue","abstract_data_type"],["heap","data_structure"],["queue","data_structure"],["stack","data_structure"],["lifo","computing"],["set","computer_science"],["multiset","abstract_data_type"],["heap","data_structure"],["container","abstract_data_type"]],"members":["heap","tree","multiset","stack","lifo","container","queue","graph","list","set"],"related":["Computer_science","Abstract_data_type","Data_structure","Container_(type_theory)","Type_theory","List_(abstract_data_type)","Set_(computer_science)","Multiset","Tree_(data_structure)","Graph_(data_structure)","Enumerated_type","List_(abstract_data_type)","Array_data_type","Stack_(abstract_data_type)","Queue_(abstract_data_type)","Priority_queue","Heap_(data_structure)","Double-ended_queue","Double-ended_priority_queue","Queue_(data_structure)","FIFO","Stack_(data_structure)","LIFO_(computing)","Indicator_function","Set_(computer_science)","Hash_table","Multiset_(abstract_data_type)","Associative_array","Hash_table","Spanning_tree_protocol","Heap_sort","Heap_(data_structure)","Primitive_data_type","Composite_data_type","Standard_library","Container_(abstract_data_type)","C++_Standard_Library","Standard_Template_Library","Java_collections_framework"]}