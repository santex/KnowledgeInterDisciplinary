{"cursor":"64869","size":15,"audio":[],"currentlang":"en","article":"\n{{Infobox programming language\n| name = Lisp paradigm = Multi-paradigm: functional, procedural, reflective,\n| meta year = 1958 designer = John McCarthy developer = Steve Russell, Timothy\n| P. Hart, and Mike Levin| latest release version = latest release date = turing-\n| complete = Yes typing = Dynamic, strong implementations = dialects = Arc,\n| AutoLISP, Clojure, Common Lisp, Emacs Lisp, EuLisp, Franz Lisp, Interlisp,\n| ISLISP, LeLisp, Maclisp, MDL, Newlisp, NIL, Picolisp, Portable Standard Lisp,\n| Racket, Scheme, SKILL, Spice Lisp, T, XLISP, Zetalisp influenced by = IPL\n| influenced = CLIPS, CLU, Dylan, Falcon, Forth, Haskell, Io, Ioke, JavaScript,\n| Logo, Lua, Mathematica, MDL, ML, Nu, OPS5, Perl, Python, Qi, R, Shen, Rebol,\n| Racket, Ruby, Smalltalk, Tcl\n}}\n\n'Lisp' (historically, 'LISP') is a family of computer programming languages with\na long history and a distinctive, fully parenthesized Polish prefix\nnotation. {{cite book\n | title = Milestones in computer science and information technology author =\n | Edwin D. Reilly publisher = Greenwood Publishing Group year = 2003 isbn = 978-1-57356-521-\n | 9 pages = 156â157 url =\n | http://books.google.com/books?id=JTYPKxug49IC&pg=PA157\n }} Originally specified in 1958, Lisp is the second-oldest high-level\n programming language in widespread use today; only Fortran is older (by one\n year). Like Fortran, Lisp has changed a great deal since its early days, and a\n number of dialects have existed over its history. Today, the most widely known\n general-purpose Lisp dialects are Common Lisp and Scheme.\n\nLisp was originally created as a practical mathematical notation for computer\nprograms, influenced by the notation of Alonzo Church's lambda calculus. It\nquickly became the favored programming language for artificial intelligence (AI)\nresearch. As one of the earliest programming languages, Lisp pioneered many\nideas in computer science, including tree data structures, automatic storage\nmanagement, dynamic typing, and the self-hosting compiler.\n\nThe name LISP derives from \"LISt Processing\". Linked lists are one of Lisp\nlanguage's major data structures, and Lisp source code is itself made up of\nlists. As a result, Lisp programs can manipulate source code as a data\nstructure, giving rise to the macro systems that allow programmers to create new\nsyntax or even new domain-specific languages embedded in Lisp.\n\nThe interchangeability of code and data also gives Lisp its instantly\nrecognizable syntax. All program code is written as [[s-expression]]s, or\nparenthesized lists. A function call or syntactic form is written as a list with\nthe function or operator's name first, and the arguments following; for\ninstance, a function f that takes three arguments might be called using .\n","linknr":793,"url":"LISP","recorded":1362676849,"links":98,"instances":["programming_language","programming_language","programming","programming","programming_language","programming_language","programming_language","programming","programming_language","programming_language","computer_programmer","programming_language","programming_language","programming_language","programming_language","window_manager","software","programming_language","computer_programming","computer_science","computing","programming_language","programming","computer_science","software","computer_scientist","programming_language","programming_language","computer_science","computer_science","programming_language","programming_language","programming_language","programmer","linguistics","computer_science","programming_language","programming_language","programming_language","audio_editor","programming_language","programming_language"],"pdf":["http://www.softwarepreservation.org/projects/LISP/stanford/Smith-MLISP-AIM-84.pdf","http://www.softwarepreservation.org/projects/LISP/stanford/Smith-MLISP-AIM-84.pdf","http://history.siam.org/sup/Fox_1960_LISP.pdf","http://history.siam.org/sup/Fox_1960_LISP.pdf","http://www.softwarepreservation.org/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf","http://www.softwarepreservation.org/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf","http://www.softwarepreservation.org/projects/LISP/stanford/SAILON-28.6.pdf","http://www.softwarepreservation.org/projects/LISP/stanford/SAILON-28.6.pdf","http://www.bitsavers.org/pdf/xerox/interlisp/1974_InterlispRefMan.pdf","http://www.bitsavers.org/pdf/xerox/interlisp/1974_InterlispRefMan.pdf","http://www.cs.umd.edu/~nau/cmsc421/norvig-lisp-style.pdf","http://www.dreamsongs.com/NewFiles/HOPL2-Uncut.pdf","http://www.dreamsongs.com/NewFiles/HOPL2-Uncut.pdf","http://www.softwarepreservation.org/projects/LISP/book/III_LispBook_Apr66.pdf","http://www.softwarepreservation.org/projects/LISP/book/III_LispBook_Apr66.pdf","http://www.softwarepreservation.org/projects/LISP/book/Weismann_LISP1.5_Primer_1967.pdf","http://www.softwarepreservation.org/projects/LISP/book/Weismann_LISP1.5_Primer_1967.pdf"],"categories":["1958 in computer science","Academic programming languages","American inventions","Articles with example Lisp code","Dynamically typed programming languages","Functional languages","Lisp programming language","Lisp programming language family","Programming languages created in 1958","Extensible syntax programming languages"],"headings":["History","Major dialects","Language innovations","Syntax and semantics","Examples","Object systems","See also","References","Further reading","External links"],"image":["//upload.wikimedia.org/wikipedia/commons/thumb/4/49/John_McCarthy_Stanford.jpg/220px-John_McCarthy_Stanford.jpg","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Steve_Russell-PDP-1-20070512.jpg/220px-Steve_Russell-PDP-1-20070512.jpg","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/1/16/LISP_machine.jpg/220px-LISP_machine.jpg","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Cons-cells.svg/300px-Cons-cells.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/magnify-clip.png","//upload.wikimedia.org/math/7/b/a/7ba55e7c64a9405a0b39a1107e90ca94.png","//upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Wiktionary-logo-en.svg/23px-Wiktionary-logo-en.svg.png","//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/18px-Commons-logo.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Wikiversity-logo-en.svg/25px-Wikiversity-logo-en.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Wikiquote-logo.svg/21px-Wikiquote-logo.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Wikisource-logo.svg/24px-Wikisource-logo.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Wikibooks-logo.svg/25px-Wikibooks-logo.svg.png","//upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Wikivoyage-logo.svg/25px-Wikivoyage-logo.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["reflection","computer_science"],["john_mccarthy","computer_scientist"],["arc","programming_language"],["mdl","programming_language"],["nil","programming_language"],["racket","programming_language"],["scheme","programming_language"],["t","programming_language"],["clu","programming_language"],["dylan","programming_language"],["falcon","programming_language"],["forth","programming_language"],["haskell","programming_language"],["io","programming_language"],["ioke","programming_language"],["logo","programming_language"],["lua","programming_language"],["mdl","programming_language"],["ml","programming_language"],["nu","programming_language"],["python","programming_language"],["qi","programming_language"],["r","programming_language"],["shen","programming_language"],["racket","programming_language"],["ruby","programming_language"],["scheme","programming_language"],["garbage_collection","computer_science"],["macro","computer_science"],["john_mccarthy","computer_scientist"],["paul_graham","computer_programmer"],["garbage_collection","computer_science"],["daniel_edwards","programmer"],["nil","programming_language"],["scheme","programming_language"],["john_mccarthy","computer_scientist"],["nil","programming_language"],["dylan","programming_language"],["scheme","programming_language"],["portability","software"],["paul_graham","computer_programmer"],["scheme","programming_language#implementations"],["arc","programming_language"],["nu","programming_language"],["scheme","programming_language"],["nil","programming_language"],["scheme","programming_language"],["python","programming_language"],["haskell","programming_language"],["audacity","audio_editor"],["sawfish","window_manager"],["garbage_collection","computer_science"],["c","programming_language"],["expression","programming"],["statement","programming"],["function","programming"],["pointer","computer_programming"],["scope","programming"],["c","programming_language"],["interpreter","computing"],["branch","computer_science"],["haskell","programming_language"],["flavors","computer_science"],["maxima","software"],["transcription","linguistics"],["john_mccarthy","computer_scientist"],["paul_graham","computer_programmer"]],"members":["forth","nu","statement","expression","haskell","arc","io","scope","t","dylan","paul_graham","nil","ml","scheme","falcon","sawfish","maxima","c","pointer","macro","interpreter","r","function","reflection","portability","john_mccarthy","shen","python","garbage_collection","flavors","ioke","mdl","ruby","daniel_edwards","transcription","branch","logo","clu","racket","audacity","qi","lua"],"related":["Multi-paradigm_programming_language","Functional_programming","Procedural_programming","Reflection_(computer_science)","Metaprogramming","John_McCarthy_(computer_scientist)","Steve_Russell","Type_system","Strongly_typed_programming_language","Arc_(programming_language)","AutoLISP","Clojure","Common_Lisp","Emacs_Lisp","EuLisp","Franz_Lisp","Interlisp","ISLISP","LeLisp","Maclisp","MDL_(programming_language)","Newlisp","NIL_(programming_language)","Picolisp","Portable_Standard_Lisp","Racket_(programming_language)","Scheme_(programming_language)","Cadence_SKILL","Spice_Lisp","T_(programming_language)","XLISP","Zetalisp","Information_Processing_Language","CLIPS","CLU_(programming_language)","Dylan_(programming_language)","Falcon_(programming_language)","Forth_(programming_language)","Haskell_(programming_language)","Io_(programming_language)","Ioke_(programming_language)","JavaScript","Logo_(programming_language)","Lua_(programming_language)","Mathematica","MDL_(programming_language)","ML_(programming_language)","Nu_(programming_language)","OPS5","Perl","Python_(programming_language)","Qi_(programming_language)","R_(programming_language)","Shen_(programming_language)","Rebol","Racket_(programming_language)","Ruby_(programming_language)","Smalltalk","Tcl","Computer","Programming_language","Polish_notation","High-level_programming_language","Fortran","Programming_language_dialect","Common_Lisp","Scheme_(programming_language)","Alonzo_Church","Lambda_calculus","Artificial_intelligence","Computer_science","Tree_data_structure","Garbage_collection_(computer_science)","Dynamic_typing","Self-hosting","Compiler","Linked_list","Data_structure","Source_code","Macro_(computer_science)","Domain-specific_language","John_McCarthy_(computer_scientist)","Massachusetts_Institute_of_Technology","Turing-complete","Information_Processing_Language","M-expression","S-expression","MLISP","Horace_Enea","CGOL","Vaughan_Pratt","Steve_Russell","IBM_704","Machine_code","Paul_Graham_(computer_programmer)","IBM_704","Software_bug","IBM_704","Car_and_cdr","Car_and_cdr","Garbage_collection_(computer_science)","MIT","Daniel_Edwards_(programmer)","Lisp_machine","Maclisp","ZetaLisp","Common_Lisp","Common_Lisp_the_Language","ANSI","Maclisp","ZetaLisp","NIL_(programming_language)","Interlisp","Common_Lisp","Scheme_(programming_language)","ISLISP","Artificial_intelligence","PDP-10","PDP-6","PDP-10","Planner_programming_language","SHRDLU","Common_Lisp","Boston","Massachusetts","M.I.T._Computation_Center","Research_Laboratory_of_Electronics_at_MIT","LISP_2","Stanford_LISP","Stanford_AI_Lab","PDP-10","TOPS-10","Maclisp","Project_MAC","Macintosh","John_McCarthy_(computer_scientist)","Multics","InterLisp","BBN_Technologies","TOPS-20","InterLisp-D","Atari","MOS_Technology_6502","Franz_Lisp","University_of_California,_Berkeley","Franz_Liszt","Allegro_Common_Lisp","XLISP","AutoLISP","Standard_Lisp","Portable_Standard_Lisp","ZetaLisp","Lisp_machine","LeLisp","Common_Lisp","Spice_Lisp","NIL_(programming_language)","S-1_Lisp","De_facto_standard","Dylan_(programming_language)","EuLisp","ISLISP","Scheme_(programming_language)","Common_Lisp","American_National_Standards_Institute","Standardization","X3J13","Consensus_decision-making","Portability_(software)","Computer_compatibility","ACL2","Open_source","Common_Lisp","Paul_Graham_(computer_programmer)","Eric_S._Raymond","AI_winter","CLiki","Common_Lisp_directory","Lisppaste","Planet_Lisp","LispForum","Lispjobs","Scheme_Requests_for_Implementation","Arc_(programming_language)","Nu_(programming_language)","Clojure","Common_Lisp","Scheme_(programming_language)","Common_Lisp","MacLisp","Lisp_Machine_Lisp","MacLisp","NIL_(programming_language)","S-1_Lisp","Spice_Lisp","Lisp_Machine","Common_Lisp_Object_System","Lexical_scoping","Lexical_closure","Tail-call_optimization","Continuation","Scheme_(programming_language)","Guy_L._Steele,_Jr.","Gerald_Jay_Sussman","Scheme_Requests_for_Implementation","Clojure","Java_Virtual_Machine","Common_Language_Runtime","Python_(programming_language)","YARV","JavaScript","Haskell_(programming_language)","Type_inference","Scripting_language","Emacs_Lisp","Emacs","AutoLisp","Visual_Lisp","AutoCAD","Audacity_(audio_editor)","SIOD","TinyScheme","GIMP","Emacs_Lisp","Sawfish_(window_manager)","Window_manager","GNU_Guile","GnuCash","GNU_Compiler_Collection","MELT","Homoiconicity","Metacircular_evaluation","ALGOL","Alan_Kay","Smalltalk","Garbage_collection_(computer_science)","AI","Fortran","ALGOL","C_(programming_language)","Expression_(programming)","Statement_(programming)","S-expression","M-expression","XMLisp","Meta-object_protocol","Xml","Function_(programming)","Metaprogramming","Foo","Prefix_notation","Infix_notation","Variadic_function","Data_type","Number","Alphanumeric","Source_code","Symbolic_processing","Programming_style","Legacy_compatibility","Singly_linked_list","Pointer_(computer_programming)","Higher-order_function","Array_data_type","Cons_pair","Big_O_notation","Functional_programming","Douglas_Hofstadter","Philosophy","Self-reference","Scope_(programming)","Newlisp","Picolisp","Emacs","AutoCAD","C_(programming_language)","Interpreter_(computing)","Bytecode","Command_line","Integrated_development_environment","Read–eval–print_loop","Eager_evaluation","Common_Lisp","Applicative_order","Scheme_programming_language","Tail_recursion","Common_Lisp","Tail_call","Iteration","Kent_Pitman","Peter_Norvig","Branch_(computer_science)","Stack_overflow","Haskell_(programming_language)","Hello_world","Factorial","Tail_recursion","Common_Lisp","Common_Lisp_Object_System","Object_Lisp","Lisp_Machines_Incorporated","CommonLOOPS","Flavors_(computer_science)","Massachusetts_Institute_of_Technology","Symbolics","Constraint_satisfaction","Common_Lisp","Knowledge_Engineering_Environment","Inference_engine","Truth_maintenance_systems","Fexpr","Maxima_(software)","Mod_lisp","P_convention","Prolog","Structure_and_Interpretation_of_Computer_Programs","Transcription_(linguistics)","Richard_Stallman","International_Lisp_Conference","Hackers_&_Painters","John_McCarthy_(computer_scientist)","Paul_Graham_(computer_programmer)","Charles_Babbage_Institute","Richard_P._Gabriel"]}