{"cursor":"10566","size":15,"audio":[],"currentlang":"en","article":"\nIn computer science, 'information hiding' is the principle of segregation of the\n[[design]] decisions in a computer program that are most likely to change, thus\nprotecting other parts of the program from extensive modification if the design\ndecision is changed. The protection involves providing a stable interface which\nprotects the remainder of the program from the implementation (the details that\nare most likely to change).\n\nWritten another way, information hiding is the ability to prevent certain\naspects of a class or software component from being accessible to its clients,\nusing either programming language features (like private variables) or an\nexplicit exporting policy.\n","linknr":156,"url":"Information_hiding","recorded":1362553500,"links":28,"instances":["computing","programming","information_security","computer_science","computing","computer_science","software","computer_science","computing","computer_science","programming","programming"],"pdf":["http://www.cs.umd.edu/class/spring2003/cmsc838p/Design/criteria.pdf"],"categories":["Object-oriented programming"],"headings":["Overview","Encapsulation","History","Example of information hiding","Relation to object-oriented programming","See also","References"],"image":["//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png","//bits.wikimedia.org/static-1.21wmf10/skins/vector/images/search-ltr.png?303-4","//bits.wikimedia.org/images/wikimedia-button.png","//bits.wikimedia.org/static-1.21wmf10/skins/common/images/poweredby_mediawiki_88x31.png"],"tags":[["interface","computer_science"],["class","computer_science"],["client","computing"],["scalar","computing"],["nesting","computing"],["dependency","computer_science"],["interface","computer_science"],["encapsulation","object-oriented_programming"],["module","programming"],["inheritance","computer_science"],["gang_of_four","software"],["modularity","programming"],["transparency","human–computer_interaction"],["scope","programming"],["compartmentalization","information_security"]],"members":["transparency","scalar","modularity","compartmentalization","inheritance","client","dependency","gang_of_four","encapsulation","interface","nesting","class","scope","module"],"related":["Computer_science","Computer_program","Interface_(computer_science)","Class_(computer_science)","Software_component","Client_(computing)","JavaWorld","Floating_point","Scalar_(computing)","Array_data_structure","Object-oriented_programming","Nesting_(computing)","Dependency_(computer_science)","Interface_(computer_science)","Object-oriented_design","Grady_Booch","Query_language","SQL","Lay_person","Encapsulation_(object-oriented_programming)","David_Parnas","Communications_of_the_ACM","Modular_programming","I/O","Sub-system","Software_library","Code_reuse","Module_(programming)","Engineer","Software_componentry","Automobile_platform","Inheritance_(computer_science)","Gang_of_Four_(software)","Implementation_inheritance","Inheritance_semantics","Modularity_(programming)","Virtual_inheritance","Transparency_(human–computer_interaction)","Scope_(programming)","Compartmentalization_(information_security)"]}